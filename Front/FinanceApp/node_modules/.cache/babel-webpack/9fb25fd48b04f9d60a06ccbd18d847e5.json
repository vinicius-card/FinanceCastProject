{"ast":null,"code":"/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.14.3\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\nvar longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nvar timeoutDuration = 0;\n\nfor (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nfunction microtaskDebounce(fn) {\n  var called = false;\n  return function () {\n    if (called) {\n      return;\n    }\n\n    called = true;\n    window.Promise.resolve().then(function () {\n      called = false;\n      fn();\n    });\n  };\n}\n\nfunction taskDebounce(fn) {\n  var scheduled = false;\n  return function () {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(function () {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nvar supportsMicroTasks = isBrowser && window.Promise;\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\n\nvar debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\n/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\n\nfunction isFunction(functionToCheck) {\n  var getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\n\n\nfunction getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  } // NOTE: 1 DOM access here\n\n\n  var css = getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\n\n\nfunction getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n\n  return element.parentNode || element.host;\n}\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\n\n\nfunction getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body;\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body;\n\n    case '#document':\n      return element.body;\n  } // Firefox want us to check `-x` and `-y` variations as well\n\n\n  var _getStyleComputedProp = getStyleComputedProperty(element),\n      overflow = _getStyleComputedProp.overflow,\n      overflowX = _getStyleComputedProp.overflowX,\n      overflowY = _getStyleComputedProp.overflowY;\n\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n\nvar isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nvar isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\n\nfunction isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n\n  if (version === 10) {\n    return isIE10;\n  }\n\n  return isIE11 || isIE10;\n}\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\n\n\nfunction getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  var noOffsetParent = isIE(10) ? document.body : null; // NOTE: 1 DOM access here\n\n  var offsetParent = element.offsetParent; // Skip hidden elements which don't have an offsetParent\n\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  var nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  } // .offsetParent will return the closest TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n\n\n  if (['TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n\nfunction isOffsetContainer(element) {\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY') {\n    return false;\n  }\n\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n}\n/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\n\n\nfunction getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\n\n\nfunction findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  } // Here we make sure to give as \"start\" the element that comes first in the DOM\n\n\n  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n  var start = order ? element1 : element2;\n  var end = order ? element2 : element1; // Get common ancestor container\n\n  var range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  var commonAncestorContainer = range.commonAncestorContainer; // Both nodes are inside #document\n\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  } // one of the nodes is inside shadowDOM, find which one\n\n\n  var element1root = getRoot(element1);\n\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\n\n\nfunction getScroll(element) {\n  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    var html = element.ownerDocument.documentElement;\n    var scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\n\n\nfunction includeScroll(rect, element) {\n  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var scrollTop = getScroll(element, 'top');\n  var scrollLeft = getScroll(element, 'left');\n  var modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\n\nfunction getBordersSize(styles, axis) {\n  var sideA = axis === 'x' ? 'Left' : 'Top';\n  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n  return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);\n}\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? html['offset' + axis] + computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')] + computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')] : 0);\n}\n\nfunction getWindowSizes() {\n  var body = document.body;\n  var html = document.documentElement;\n  var computedStyle = isIE(10) && getComputedStyle(html);\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\n\n\nfunction getClientRect(offsets) {\n  return _extends({}, offsets, {\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height\n  });\n}\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\n\n\nfunction getBoundingClientRect(element) {\n  var rect = {}; // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      var scrollTop = getScroll(element, 'top');\n      var scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } else {\n      rect = element.getBoundingClientRect();\n    }\n  } catch (e) {}\n\n  var result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  }; // subtract scrollbar size from sizes\n\n  var sizes = element.nodeName === 'HTML' ? getWindowSizes() : {};\n  var width = sizes.width || element.clientWidth || result.right - result.left;\n  var height = sizes.height || element.clientHeight || result.bottom - result.top;\n  var horizScrollbar = element.offsetWidth - width;\n  var vertScrollbar = element.offsetHeight - height; // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n\n  if (horizScrollbar || vertScrollbar) {\n    var styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n\nfunction getOffsetRectRelativeToArbitraryNode(children, parent) {\n  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var isIE10 = isIE(10);\n  var isHTML = parent.nodeName === 'HTML';\n  var childrenRect = getBoundingClientRect(children);\n  var parentRect = getBoundingClientRect(parent);\n  var scrollParent = getScrollParent(children);\n  var styles = getStyleComputedProperty(parent);\n  var borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n  var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10); // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n\n  if (fixedPosition && parent.nodeName === 'HTML') {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n\n  var offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0; // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n\n  if (!isIE10 && isHTML) {\n    var marginTop = parseFloat(styles.marginTop, 10);\n    var marginLeft = parseFloat(styles.marginLeft, 10);\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft; // Attach marginTop and marginLeft because in some circumstances we may need them\n\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var html = element.ownerDocument.documentElement;\n  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  var width = Math.max(html.clientWidth, window.innerWidth || 0);\n  var height = Math.max(html.clientHeight, window.innerHeight || 0);\n  var scrollTop = !excludeScroll ? getScroll(html) : 0;\n  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n  var offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width: width,\n    height: height\n  };\n  return getClientRect(offset);\n}\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\n\n\nfunction isFixed(element) {\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n\n  return isFixed(getParentNode(element));\n}\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\n\nfunction getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n\n  var el = element.parentElement;\n\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n\n  return el || document.documentElement;\n}\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\n\n\nfunction getBoundaries(popper, reference, padding, boundariesElement) {\n  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false; // NOTE: 1 DOM access here\n\n  var boundaries = {\n    top: 0,\n    left: 0\n  };\n  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference); // Handle viewport case\n\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    var boundariesNode = void 0;\n\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition); // In case of HTML, we need a different computation\n\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      var _getWindowSizes = getWindowSizes(),\n          height = _getWindowSizes.height,\n          width = _getWindowSizes.width;\n\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  } // Add paddings\n\n\n  boundaries.left += padding;\n  boundaries.top += padding;\n  boundaries.right -= padding;\n  boundaries.bottom -= padding;\n  return boundaries;\n}\n\nfunction getArea(_ref) {\n  var width = _ref.width,\n      height = _ref.height;\n  return width * height;\n}\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\n\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n  var rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height\n    }\n  };\n  var sortedAreas = Object.keys(rects).map(function (key) {\n    return _extends({\n      key: key\n    }, rects[key], {\n      area: getArea(rects[key])\n    });\n  }).sort(function (a, b) {\n    return b.area - a.area;\n  });\n  var filteredAreas = sortedAreas.filter(function (_ref2) {\n    var width = _ref2.width,\n        height = _ref2.height;\n    return width >= popper.clientWidth && height >= popper.clientHeight;\n  });\n  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n  var variation = placement.split('-')[1];\n  return computedPlacement + (variation ? '-' + variation : '');\n}\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\n\n\nfunction getReferenceOffsets(state, popper, reference) {\n  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\n\n\nfunction getOuterSizes(element) {\n  var styles = getComputedStyle(element);\n  var x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\n  var y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\n  var result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x\n  };\n  return result;\n}\n/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\n\n\nfunction getOppositePlacement(placement) {\n  var hash = {\n    left: 'right',\n    right: 'left',\n    bottom: 'top',\n    top: 'bottom'\n  };\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\n\n\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0]; // Get popper node sizes\n\n  var popperRect = getOuterSizes(popper); // Add position, width and height to our offsets object\n\n  var popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height\n  }; // depending by the popper placement we have to compute its offsets slightly differently\n\n  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  var mainSide = isHoriz ? 'top' : 'left';\n  var secondarySide = isHoriz ? 'left' : 'top';\n  var measurement = isHoriz ? 'height' : 'width';\n  var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\n\n\nfunction find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  } // use `filter` to obtain the same behavior of `find`\n\n\n  return arr.filter(check)[0];\n}\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\n\n\nfunction findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(function (cur) {\n      return cur[prop] === value;\n    });\n  } // use `find` + `indexOf` if `findIndex` isn't supported\n\n\n  var match = find(arr, function (obj) {\n    return obj[prop] === value;\n  });\n  return arr.indexOf(match);\n}\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\n\n\nfunction runModifiers(modifiers, data, ends) {\n  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n  modifiersToRun.forEach(function (modifier) {\n    if (modifier['function']) {\n      // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n\n    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n      data = fn(data, modifier);\n    }\n  });\n  return data;\n}\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\n\n\nfunction update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  var data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {}\n  }; // compute reference element offsets\n\n  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed); // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n\n  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding); // store the computed placement inside `originalPlacement`\n\n  data.originalPlacement = data.placement;\n  data.positionFixed = this.options.positionFixed; // compute the popper offsets\n\n  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute'; // run the modifiers\n\n  data = runModifiers(this.modifiers, data); // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\n\n\nfunction isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(function (_ref) {\n    var name = _ref.name,\n        enabled = _ref.enabled;\n    return enabled && name === modifierName;\n  });\n}\n/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\n\n\nfunction getSupportedPropertyName(property) {\n  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefix = prefixes[i];\n    var toCheck = prefix ? '' + prefix + upperProp : property;\n\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n\n  return null;\n}\n/**\n * Destroy the popper\n * @method\n * @memberof Popper\n */\n\n\nfunction destroy() {\n  this.state.isDestroyed = true; // touch DOM only if `applyStyle` modifier is enabled\n\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners(); // remove the popper if user explicity asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n\n  return this;\n}\n/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\n\n\nfunction getWindow(element) {\n  var ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  var isBody = scrollParent.nodeName === 'BODY';\n  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, {\n    passive: true\n  });\n\n  if (!isBody) {\n    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n  }\n\n  scrollParents.push(target);\n}\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\n\n\nfunction setupEventListeners(reference, options, state, updateBound) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, {\n    passive: true\n  }); // Scroll event listener on scroll parents\n\n  var scrollElement = getScrollParent(reference);\n  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n  return state;\n}\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\n\n\nfunction enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n  }\n}\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\n\n\nfunction removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound); // Remove scroll event listener on scroll parents\n\n  state.scrollParents.forEach(function (target) {\n    target.removeEventListener('scroll', state.updateBound);\n  }); // Reset state\n\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger onUpdate callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\n\n\nfunction disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\n\n\nfunction isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\n\n\nfunction setStyles(element, styles) {\n  Object.keys(styles).forEach(function (prop) {\n    var unit = ''; // add unit if the value is numeric and is one of the following\n\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\n\n\nfunction setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function (prop) {\n    var value = attributes[prop];\n\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\n\n\nfunction applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles); // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n\n  setAttributes(data.instance.popper, data.attributes); // if arrowElement is defined and arrowStyles has some properties\n\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\n\n\nfunction applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n  // compute reference element offsets\n  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed); // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n\n  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n  popper.setAttribute('x-placement', placement); // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n\n  setStyles(popper, {\n    position: options.positionFixed ? 'fixed' : 'absolute'\n  });\n  return options;\n}\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\n\nfunction computeStyle(data, options) {\n  var x = options.x,\n      y = options.y;\n  var popper = data.offsets.popper; // Remove this legacy support in Popper.js v2\n\n  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'applyStyle';\n  }).gpuAcceleration;\n\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n  }\n\n  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n  var offsetParent = getOffsetParent(data.instance.popper);\n  var offsetParentRect = getBoundingClientRect(offsetParent); // Styles\n\n  var styles = {\n    position: popper.position\n  }; // Avoid blurry text by using full pixel integers.\n  // For pixel-perfect positioning, top/bottom prefers rounded\n  // values, while left/right prefers floored values.\n\n  var offsets = {\n    left: Math.floor(popper.left),\n    top: Math.round(popper.top),\n    bottom: Math.round(popper.bottom),\n    right: Math.floor(popper.right)\n  };\n  var sideA = x === 'bottom' ? 'top' : 'bottom';\n  var sideB = y === 'right' ? 'left' : 'right'; // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n\n  var prefixedProperty = getSupportedPropertyName('transform'); // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n\n  var left = void 0,\n      top = void 0;\n\n  if (sideA === 'bottom') {\n    top = -offsetParentRect.height + offsets.bottom;\n  } else {\n    top = offsets.top;\n  }\n\n  if (sideB === 'right') {\n    left = -offsetParentRect.width + offsets.right;\n  } else {\n    left = offsets.left;\n  }\n\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    var invertTop = sideA === 'bottom' ? -1 : 1;\n    var invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = sideA + ', ' + sideB;\n  } // Attributes\n\n\n  var attributes = {\n    'x-placement': data.placement\n  }; // Update `data` attributes, styles and arrowStyles\n\n  data.attributes = _extends({}, attributes, data.attributes);\n  data.styles = _extends({}, styles, data.styles);\n  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\n  return data;\n}\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\n\n\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\n  var requesting = find(modifiers, function (_ref) {\n    var name = _ref.name;\n    return name === requestingName;\n  });\n  var isRequired = !!requesting && modifiers.some(function (modifier) {\n    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n  });\n\n  if (!isRequired) {\n    var _requesting = '`' + requestingName + '`';\n\n    var requested = '`' + requestedName + '`';\n    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n  }\n\n  return isRequired;\n}\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\n\nfunction arrow(data, options) {\n  var _data$offsets$arrow; // arrow depends on keepTogether in order to work\n\n\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  var arrowElement = options.element; // if arrowElement is a string, suppose it's a CSS selector\n\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement); // if arrowElement is not found, don't run the modifier\n\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn('WARNING: `arrow.element` must be child of its popper element!');\n      return data;\n    }\n  }\n\n  var placement = data.placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n  var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n  var len = isVertical ? 'height' : 'width';\n  var sideCapitalized = isVertical ? 'Top' : 'Left';\n  var side = sideCapitalized.toLowerCase();\n  var altSide = isVertical ? 'left' : 'top';\n  var opSide = isVertical ? 'bottom' : 'right';\n  var arrowElementSize = getOuterSizes(arrowElement)[len]; //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjuction\n  //\n  // top/left side\n\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n  } // bottom/right side\n\n\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n  }\n\n  data.offsets.popper = getClientRect(data.offsets.popper); // compute center of the popper\n\n  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2; // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n\n  var css = getStyleComputedProperty(data.instance.popper);\n  var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);\n  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);\n  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide; // prevent arrowElement from being placed not contiguously to its popper\n\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\n  return data;\n}\n/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\n\n\nfunction getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n\n  return variation;\n}\n/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-right` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\n\n\nvar placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start']; // Get rid of `auto` `auto-start` and `auto-end`\n\nvar validPlacements = placements.slice(3);\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\n\nfunction clockwise(placement) {\n  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var index = validPlacements.indexOf(placement);\n  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n\nvar BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise'\n};\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\nfunction flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);\n  var placement = data.placement.split('-')[0];\n  var placementOpposite = getOppositePlacement(placement);\n  var variation = data.placement.split('-')[1] || '';\n  var flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach(function (step, index) {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n    var popperOffsets = data.offsets.popper;\n    var refOffsets = data.offsets.reference; // using floor because the reference offsets may contain decimals we are not going to consider here\n\n    var floor = Math.floor;\n    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom; // flip the variation if required\n\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    var flippedVariation = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : ''); // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n\n      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\n\nfunction keepTogether(data) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n  var placement = data.placement.split('-')[0];\n  var floor = Math.floor;\n  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  var side = isVertical ? 'right' : 'bottom';\n  var opSide = isVertical ? 'left' : 'top';\n  var measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n  }\n\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\n\n\nfunction toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  var value = +split[1];\n  var unit = split[2]; // If it's not a number it's an operator, I guess\n\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    var element = void 0;\n\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    var rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    var size = void 0;\n\n    if (unit === 'vh') {\n      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    } else {\n      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    }\n\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\n\n\nfunction parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n  var offsets = [0, 0]; // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n\n  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1; // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n\n  var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n    return frag.trim();\n  }); // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n\n  var divider = fragments.indexOf(find(fragments, function (frag) {\n    return frag.search(/,|\\s/) !== -1;\n  }));\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n  } // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n\n\n  var splitRegex = /\\s*,\\s*|\\s+/;\n  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments]; // Convert the values with units to absolute pixels to allow our computations\n\n  ops = ops.map(function (op, index) {\n    // Most of the units rely on the orientation of the popper\n    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n    var mergeWithPrevious = false;\n    return op // This aggregates any `+` or `-` sign that aren't considered operators\n    // e.g.: 10 + +5 => [10, +, +5]\n    .reduce(function (a, b) {\n      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n        a[a.length - 1] = b;\n        mergeWithPrevious = true;\n        return a;\n      } else if (mergeWithPrevious) {\n        a[a.length - 1] += b;\n        mergeWithPrevious = false;\n        return a;\n      } else {\n        return a.concat(b);\n      }\n    }, []) // Here we convert the string values into number values (in px)\n    .map(function (str) {\n      return toValue(str, measurement, popperOffsets, referenceOffsets);\n    });\n  }); // Loop trough the offsets arrays and execute the operations\n\n  ops.forEach(function (op, index) {\n    op.forEach(function (frag, index2) {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\n\n\nfunction offset(data, _ref) {\n  var offset = _ref.offset;\n  var placement = data.placement,\n      _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n  var basePlacement = placement.split('-')[0];\n  var offsets = void 0;\n\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\n\nfunction preventOverflow(data, options) {\n  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper); // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  } // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n\n\n  var transformProp = getSupportedPropertyName('transform');\n  var popperStyles = data.instance.popper.style; // assignment to help minification\n\n  var top = popperStyles.top,\n      left = popperStyles.left,\n      transform = popperStyles[transformProp];\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed); // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n  options.boundaries = boundaries;\n  var order = options.priority;\n  var popper = data.offsets.popper;\n  var check = {\n    primary: function primary(placement) {\n      var value = popper[placement];\n\n      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n\n      return defineProperty({}, placement, value);\n    },\n    secondary: function secondary(placement) {\n      var mainSide = placement === 'right' ? 'left' : 'top';\n      var value = popper[mainSide];\n\n      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n      }\n\n      return defineProperty({}, mainSide, value);\n    }\n  };\n  order.forEach(function (placement) {\n    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = _extends({}, popper, check[side](placement));\n  });\n  data.offsets.popper = popper;\n  return data;\n}\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\n\nfunction shift(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var shiftvariation = placement.split('-')[1]; // if shift shiftvariation is specified, run the modifier\n\n  if (shiftvariation) {\n    var _data$offsets = data.offsets,\n        reference = _data$offsets.reference,\n        popper = _data$offsets.popper;\n    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    var side = isVertical ? 'left' : 'top';\n    var measurement = isVertical ? 'width' : 'height';\n    var shiftOffsets = {\n      start: defineProperty({}, side, reference[side]),\n      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\n    };\n    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n  }\n\n  return data;\n}\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\n\nfunction hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  var refRect = data.offsets.reference;\n  var bound = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'preventOverflow';\n  }).boundaries;\n\n  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\n\nfunction inner(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n  return data;\n}\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\n\n\nvar modifiers = {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: shift\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unitless, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the height.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > More on this [reading this issue](https://github.com/FezVrasta/popper.js/issues/373)\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: offset,\n\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * An scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper this makes sure the popper has always a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier, can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent'\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near eachothers\n   * without leaving any gap between the two. Expecially useful when the arrow is\n   * enabled and you want to assure it to point to its reference element.\n   * It cares only about the first axis, you can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: keepTogether\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjuction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: arrow,\n\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]'\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: flip,\n\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations).\n     */\n    behavior: 'flip',\n\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position,\n     * the popper will never be placed outside of the defined boundaries\n     * (except if keepTogether is enabled)\n     */\n    boundariesElement: 'viewport'\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n\n    /** @prop {ModifierFn} */\n    fn: inner\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: hide\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3d transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties.\n     */\n    gpuAcceleration: true,\n\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right'\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define you own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3d transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties.\n     */\n    gpuAcceleration: undefined\n  }\n};\n/**\n * The `dataObject` is an object containing all the informations used by Popper.js\n * this object get passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper.\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper, it expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow, it expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements.\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overriden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass as 3rd argument an object with the same\n * structure of this object, example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\n\nvar Defaults = {\n  /**\n   * Popper's placement\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: function onCreate() {},\n\n  /**\n   * Callback called when the popper is updated, this callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: function onUpdate() {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js\n   * @prop {modifiers}\n   */\n  modifiers: modifiers\n};\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n// Utils\n// Methods\n\nvar Popper = function () {\n  /**\n   * Create a new Popper.js instance\n   * @class Popper\n   * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper\n   * @param {HTMLElement} popper - The HTML element used as popper.\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  function Popper(reference, popper) {\n    var _this = this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, Popper);\n\n    this.scheduleUpdate = function () {\n      return requestAnimationFrame(_this.update);\n    }; // make update() debounced, so that it only runs at most once-per-tick\n\n\n    this.update = debounce(this.update.bind(this)); // with {} we create a new object with the options inside it\n\n    this.options = _extends({}, Popper.Defaults, options); // init state\n\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: []\n    }; // get reference and popper elements (allow jQuery wrappers)\n\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper; // Deep merge modifiers options\n\n    this.options.modifiers = {};\n    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n    }); // Refactoring modifiers' list (Object => Array)\n\n    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n      return _extends({\n        name: name\n      }, _this.options.modifiers[name]);\n    }) // sort the modifiers by order\n    .sort(function (a, b) {\n      return a.order - b.order;\n    }); // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n\n    this.modifiers.forEach(function (modifierOptions) {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n      }\n    }); // fire the first update to position the popper in the right place\n\n    this.update();\n    var eventsEnabled = this.options.eventsEnabled;\n\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  } // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n\n\n  createClass(Popper, [{\n    key: 'update',\n    value: function update$$1() {\n      return update.call(this);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy$$1() {\n      return destroy.call(this);\n    }\n  }, {\n    key: 'enableEventListeners',\n    value: function enableEventListeners$$1() {\n      return enableEventListeners.call(this);\n    }\n  }, {\n    key: 'disableEventListeners',\n    value: function disableEventListeners$$1() {\n      return disableEventListeners.call(this);\n    }\n    /**\n     * Schedule an update, it will run on the next UI update available\n     * @method scheduleUpdate\n     * @memberof Popper\n     */\n\n    /**\n     * Collection of utilities useful when writing custom modifiers.\n     * Starting from version 1.7, this method is available only if you\n     * include `popper-utils.js` before `popper.js`.\n     *\n     * **DEPRECATION**: This way to access PopperUtils is deprecated\n     * and will be removed in v2! Use the PopperUtils module directly instead.\n     * Due to the high instability of the methods contained in Utils, we can't\n     * guarantee them to follow semver. Use them at your own risk!\n     * @static\n     * @private\n     * @type {Object}\n     * @deprecated since version 1.8\n     * @member Utils\n     * @memberof Popper\n     */\n\n  }]);\n  return Popper;\n}();\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n\n\nPopper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\nPopper.placements = placements;\nPopper.Defaults = Defaults;\nexport default Popper;","map":{"version":3,"sources":["C:/Users/lucas/Videos/CAST/ProjetoFinal/Programa/Front/FinanceApp/node_modules/popper.js/dist/esm/popper.js"],"names":["isBrowser","window","document","longerTimeoutBrowsers","timeoutDuration","i","length","navigator","userAgent","indexOf","microtaskDebounce","fn","called","Promise","resolve","then","taskDebounce","scheduled","setTimeout","supportsMicroTasks","debounce","isFunction","functionToCheck","getType","toString","call","getStyleComputedProperty","element","property","nodeType","css","getComputedStyle","getParentNode","nodeName","parentNode","host","getScrollParent","body","ownerDocument","_getStyleComputedProp","overflow","overflowX","overflowY","test","isIE11","MSInputMethodContext","documentMode","isIE10","isIE","version","getOffsetParent","documentElement","noOffsetParent","offsetParent","nextElementSibling","isOffsetContainer","firstElementChild","getRoot","node","findCommonOffsetParent","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","contains","element1root","getScroll","side","arguments","undefined","upperSide","html","scrollingElement","includeScroll","rect","subtract","scrollTop","scrollLeft","modifier","top","bottom","left","right","getBordersSize","styles","axis","sideA","sideB","parseFloat","getSize","computedStyle","Math","max","getWindowSizes","height","width","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","obj","value","_extends","assign","source","hasOwnProperty","getClientRect","offsets","getBoundingClientRect","e","result","sizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getOffsetRectRelativeToArbitraryNode","children","parent","fixedPosition","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","getViewportOffsetRectRelativeToArtbitraryNode","excludeScroll","relativeOffset","innerWidth","innerHeight","offset","isFixed","getFixedPositionOffsetParent","parentElement","el","getBoundaries","popper","reference","padding","boundariesElement","boundaries","boundariesNode","_getWindowSizes","getArea","_ref","computeAutoPlacement","placement","refRect","rects","sortedAreas","keys","map","area","sort","a","b","filteredAreas","filter","_ref2","computedPlacement","variation","split","getReferenceOffsets","state","commonOffsetParent","getOuterSizes","x","marginBottom","y","marginRight","getOppositePlacement","hash","replace","matched","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","find","arr","check","Array","findIndex","prop","cur","match","runModifiers","modifiers","data","ends","modifiersToRun","slice","forEach","console","warn","enabled","update","isDestroyed","arrowStyles","attributes","flipped","options","positionFixed","flip","originalPlacement","position","isCreated","onCreate","onUpdate","isModifierEnabled","modifierName","some","name","getSupportedPropertyName","prefixes","upperProp","charAt","toUpperCase","prefix","toCheck","style","destroy","removeAttribute","willChange","disableEventListeners","removeOnDestroy","removeChild","getWindow","defaultView","attachToScrollParents","event","callback","scrollParents","isBody","addEventListener","passive","push","setupEventListeners","updateBound","scrollElement","eventsEnabled","enableEventListeners","scheduleUpdate","removeEventListeners","removeEventListener","cancelAnimationFrame","isNumeric","n","isNaN","isFinite","setStyles","unit","setAttributes","setAttribute","applyStyle","arrowElement","applyStyleOnLoad","modifierOptions","computeStyle","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","floor","round","prefixedProperty","invertTop","invertLeft","arrow","isModifierRequired","requestingName","requestedName","requesting","isRequired","_requesting","requested","_data$offsets$arrow","querySelector","_data$offsets","isVertical","len","sideCapitalized","toLowerCase","altSide","opSide","arrowElementSize","center","popperMarginSide","popperBorderSide","sideValue","min","getOppositeVariation","placements","validPlacements","clockwise","counter","index","concat","reverse","BEHAVIORS","FLIP","CLOCKWISE","COUNTERCLOCKWISE","placementOpposite","flipOrder","behavior","step","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariation","flipVariations","keepTogether","toValue","str","size","parseOffset","basePlacement","useHeight","fragments","frag","trim","divider","search","splitRegex","ops","op","mergeWithPrevious","reduce","index2","preventOverflow","transformProp","popperStyles","transform","priority","primary","escapeWithReference","secondary","shift","shiftvariation","shiftOffsets","hide","bound","inner","subtractLength","onLoad","Defaults","Popper","_this","requestAnimationFrame","bind","jquery","update$$1","destroy$$1","enableEventListeners$$1","disableEventListeners$$1","Utils","global","PopperUtils"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,SAAS,GAAG,OAAOC,MAAP,KAAkB,WAAlB,IAAiC,OAAOC,QAAP,KAAoB,WAArE;AAEA,IAAIC,qBAAqB,GAAG,CAAC,MAAD,EAAS,SAAT,EAAoB,SAApB,CAA5B;AACA,IAAIC,eAAe,GAAG,CAAtB;;AACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,qBAAqB,CAACG,MAA1C,EAAkDD,CAAC,IAAI,CAAvD,EAA0D;AACxD,MAAIL,SAAS,IAAIO,SAAS,CAACC,SAAV,CAAoBC,OAApB,CAA4BN,qBAAqB,CAACE,CAAD,CAAjD,KAAyD,CAA1E,EAA6E;AAC3ED,IAAAA,eAAe,GAAG,CAAlB;AACA;AACD;AACF;;AAED,SAASM,iBAAT,CAA2BC,EAA3B,EAA+B;AAC7B,MAAIC,MAAM,GAAG,KAAb;AACA,SAAO,YAAY;AACjB,QAAIA,MAAJ,EAAY;AACV;AACD;;AACDA,IAAAA,MAAM,GAAG,IAAT;AACAX,IAAAA,MAAM,CAACY,OAAP,CAAeC,OAAf,GAAyBC,IAAzB,CAA8B,YAAY;AACxCH,MAAAA,MAAM,GAAG,KAAT;AACAD,MAAAA,EAAE;AACH,KAHD;AAID,GATD;AAUD;;AAED,SAASK,YAAT,CAAsBL,EAAtB,EAA0B;AACxB,MAAIM,SAAS,GAAG,KAAhB;AACA,SAAO,YAAY;AACjB,QAAI,CAACA,SAAL,EAAgB;AACdA,MAAAA,SAAS,GAAG,IAAZ;AACAC,MAAAA,UAAU,CAAC,YAAY;AACrBD,QAAAA,SAAS,GAAG,KAAZ;AACAN,QAAAA,EAAE;AACH,OAHS,EAGPP,eAHO,CAAV;AAID;AACF,GARD;AASD;;AAED,IAAIe,kBAAkB,GAAGnB,SAAS,IAAIC,MAAM,CAACY,OAA7C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIO,QAAQ,GAAGD,kBAAkB,GAAGT,iBAAH,GAAuBM,YAAxD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASK,UAAT,CAAoBC,eAApB,EAAqC;AACnC,MAAIC,OAAO,GAAG,EAAd;AACA,SAAOD,eAAe,IAAIC,OAAO,CAACC,QAAR,CAAiBC,IAAjB,CAAsBH,eAAtB,MAA2C,mBAArE;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASI,wBAAT,CAAkCC,OAAlC,EAA2CC,QAA3C,EAAqD;AACnD,MAAID,OAAO,CAACE,QAAR,KAAqB,CAAzB,EAA4B;AAC1B,WAAO,EAAP;AACD,GAHkD,CAInD;;;AACA,MAAIC,GAAG,GAAGC,gBAAgB,CAACJ,OAAD,EAAU,IAAV,CAA1B;AACA,SAAOC,QAAQ,GAAGE,GAAG,CAACF,QAAD,CAAN,GAAmBE,GAAlC;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,aAAT,CAAuBL,OAAvB,EAAgC;AAC9B,MAAIA,OAAO,CAACM,QAAR,KAAqB,MAAzB,EAAiC;AAC/B,WAAON,OAAP;AACD;;AACD,SAAOA,OAAO,CAACO,UAAR,IAAsBP,OAAO,CAACQ,IAArC;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,eAAT,CAAyBT,OAAzB,EAAkC;AAChC;AACA,MAAI,CAACA,OAAL,EAAc;AACZ,WAAOzB,QAAQ,CAACmC,IAAhB;AACD;;AAED,UAAQV,OAAO,CAACM,QAAhB;AACE,SAAK,MAAL;AACA,SAAK,MAAL;AACE,aAAON,OAAO,CAACW,aAAR,CAAsBD,IAA7B;;AACF,SAAK,WAAL;AACE,aAAOV,OAAO,CAACU,IAAf;AALJ,GANgC,CAchC;;;AAEA,MAAIE,qBAAqB,GAAGb,wBAAwB,CAACC,OAAD,CAApD;AAAA,MACIa,QAAQ,GAAGD,qBAAqB,CAACC,QADrC;AAAA,MAEIC,SAAS,GAAGF,qBAAqB,CAACE,SAFtC;AAAA,MAGIC,SAAS,GAAGH,qBAAqB,CAACG,SAHtC;;AAKA,MAAI,wBAAwBC,IAAxB,CAA6BH,QAAQ,GAAGE,SAAX,GAAuBD,SAApD,CAAJ,EAAoE;AAClE,WAAOd,OAAP;AACD;;AAED,SAAOS,eAAe,CAACJ,aAAa,CAACL,OAAD,CAAd,CAAtB;AACD;;AAED,IAAIiB,MAAM,GAAG5C,SAAS,IAAI,CAAC,EAAEC,MAAM,CAAC4C,oBAAP,IAA+B3C,QAAQ,CAAC4C,YAA1C,CAA3B;AACA,IAAIC,MAAM,GAAG/C,SAAS,IAAI,UAAU2C,IAAV,CAAepC,SAAS,CAACC,SAAzB,CAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASwC,IAAT,CAAcC,OAAd,EAAuB;AACrB,MAAIA,OAAO,KAAK,EAAhB,EAAoB;AAClB,WAAOL,MAAP;AACD;;AACD,MAAIK,OAAO,KAAK,EAAhB,EAAoB;AAClB,WAAOF,MAAP;AACD;;AACD,SAAOH,MAAM,IAAIG,MAAjB;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASG,eAAT,CAAyBvB,OAAzB,EAAkC;AAChC,MAAI,CAACA,OAAL,EAAc;AACZ,WAAOzB,QAAQ,CAACiD,eAAhB;AACD;;AAED,MAAIC,cAAc,GAAGJ,IAAI,CAAC,EAAD,CAAJ,GAAW9C,QAAQ,CAACmC,IAApB,GAA2B,IAAhD,CALgC,CAOhC;;AACA,MAAIgB,YAAY,GAAG1B,OAAO,CAAC0B,YAA3B,CARgC,CAShC;;AACA,SAAOA,YAAY,KAAKD,cAAjB,IAAmCzB,OAAO,CAAC2B,kBAAlD,EAAsE;AACpED,IAAAA,YAAY,GAAG,CAAC1B,OAAO,GAAGA,OAAO,CAAC2B,kBAAnB,EAAuCD,YAAtD;AACD;;AAED,MAAIpB,QAAQ,GAAGoB,YAAY,IAAIA,YAAY,CAACpB,QAA5C;;AAEA,MAAI,CAACA,QAAD,IAAaA,QAAQ,KAAK,MAA1B,IAAoCA,QAAQ,KAAK,MAArD,EAA6D;AAC3D,WAAON,OAAO,GAAGA,OAAO,CAACW,aAAR,CAAsBa,eAAzB,GAA2CjD,QAAQ,CAACiD,eAAlE;AACD,GAlB+B,CAoBhC;AACA;;;AACA,MAAI,CAAC,IAAD,EAAO,OAAP,EAAgB1C,OAAhB,CAAwB4C,YAAY,CAACpB,QAArC,MAAmD,CAAC,CAApD,IAAyDP,wBAAwB,CAAC2B,YAAD,EAAe,UAAf,CAAxB,KAAuD,QAApH,EAA8H;AAC5H,WAAOH,eAAe,CAACG,YAAD,CAAtB;AACD;;AAED,SAAOA,YAAP;AACD;;AAED,SAASE,iBAAT,CAA2B5B,OAA3B,EAAoC;AAClC,MAAIM,QAAQ,GAAGN,OAAO,CAACM,QAAvB;;AAEA,MAAIA,QAAQ,KAAK,MAAjB,EAAyB;AACvB,WAAO,KAAP;AACD;;AACD,SAAOA,QAAQ,KAAK,MAAb,IAAuBiB,eAAe,CAACvB,OAAO,CAAC6B,iBAAT,CAAf,KAA+C7B,OAA7E;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS8B,OAAT,CAAiBC,IAAjB,EAAuB;AACrB,MAAIA,IAAI,CAACxB,UAAL,KAAoB,IAAxB,EAA8B;AAC5B,WAAOuB,OAAO,CAACC,IAAI,CAACxB,UAAN,CAAd;AACD;;AAED,SAAOwB,IAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,sBAAT,CAAgCC,QAAhC,EAA0CC,QAA1C,EAAoD;AAClD;AACA,MAAI,CAACD,QAAD,IAAa,CAACA,QAAQ,CAAC/B,QAAvB,IAAmC,CAACgC,QAApC,IAAgD,CAACA,QAAQ,CAAChC,QAA9D,EAAwE;AACtE,WAAO3B,QAAQ,CAACiD,eAAhB;AACD,GAJiD,CAMlD;;;AACA,MAAIW,KAAK,GAAGF,QAAQ,CAACG,uBAAT,CAAiCF,QAAjC,IAA6CG,IAAI,CAACC,2BAA9D;AACA,MAAIC,KAAK,GAAGJ,KAAK,GAAGF,QAAH,GAAcC,QAA/B;AACA,MAAIM,GAAG,GAAGL,KAAK,GAAGD,QAAH,GAAcD,QAA7B,CATkD,CAWlD;;AACA,MAAIQ,KAAK,GAAGlE,QAAQ,CAACmE,WAAT,EAAZ;AACAD,EAAAA,KAAK,CAACE,QAAN,CAAeJ,KAAf,EAAsB,CAAtB;AACAE,EAAAA,KAAK,CAACG,MAAN,CAAaJ,GAAb,EAAkB,CAAlB;AACA,MAAIK,uBAAuB,GAAGJ,KAAK,CAACI,uBAApC,CAfkD,CAiBlD;;AAEA,MAAIZ,QAAQ,KAAKY,uBAAb,IAAwCX,QAAQ,KAAKW,uBAArD,IAAgFN,KAAK,CAACO,QAAN,CAAeN,GAAf,CAApF,EAAyG;AACvG,QAAIZ,iBAAiB,CAACiB,uBAAD,CAArB,EAAgD;AAC9C,aAAOA,uBAAP;AACD;;AAED,WAAOtB,eAAe,CAACsB,uBAAD,CAAtB;AACD,GAzBiD,CA2BlD;;;AACA,MAAIE,YAAY,GAAGjB,OAAO,CAACG,QAAD,CAA1B;;AACA,MAAIc,YAAY,CAACvC,IAAjB,EAAuB;AACrB,WAAOwB,sBAAsB,CAACe,YAAY,CAACvC,IAAd,EAAoB0B,QAApB,CAA7B;AACD,GAFD,MAEO;AACL,WAAOF,sBAAsB,CAACC,QAAD,EAAWH,OAAO,CAACI,QAAD,CAAP,CAAkB1B,IAA7B,CAA7B;AACD;AACF;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASwC,SAAT,CAAmBhD,OAAnB,EAA4B;AAC1B,MAAIiD,IAAI,GAAGC,SAAS,CAACvE,MAAV,GAAmB,CAAnB,IAAwBuE,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAAzC,GAAqDD,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAA/E;AAEA,MAAIE,SAAS,GAAGH,IAAI,KAAK,KAAT,GAAiB,WAAjB,GAA+B,YAA/C;AACA,MAAI3C,QAAQ,GAAGN,OAAO,CAACM,QAAvB;;AAEA,MAAIA,QAAQ,KAAK,MAAb,IAAuBA,QAAQ,KAAK,MAAxC,EAAgD;AAC9C,QAAI+C,IAAI,GAAGrD,OAAO,CAACW,aAAR,CAAsBa,eAAjC;AACA,QAAI8B,gBAAgB,GAAGtD,OAAO,CAACW,aAAR,CAAsB2C,gBAAtB,IAA0CD,IAAjE;AACA,WAAOC,gBAAgB,CAACF,SAAD,CAAvB;AACD;;AAED,SAAOpD,OAAO,CAACoD,SAAD,CAAd;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASG,aAAT,CAAuBC,IAAvB,EAA6BxD,OAA7B,EAAsC;AACpC,MAAIyD,QAAQ,GAAGP,SAAS,CAACvE,MAAV,GAAmB,CAAnB,IAAwBuE,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAAzC,GAAqDD,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAAnF;AAEA,MAAIQ,SAAS,GAAGV,SAAS,CAAChD,OAAD,EAAU,KAAV,CAAzB;AACA,MAAI2D,UAAU,GAAGX,SAAS,CAAChD,OAAD,EAAU,MAAV,CAA1B;AACA,MAAI4D,QAAQ,GAAGH,QAAQ,GAAG,CAAC,CAAJ,GAAQ,CAA/B;AACAD,EAAAA,IAAI,CAACK,GAAL,IAAYH,SAAS,GAAGE,QAAxB;AACAJ,EAAAA,IAAI,CAACM,MAAL,IAAeJ,SAAS,GAAGE,QAA3B;AACAJ,EAAAA,IAAI,CAACO,IAAL,IAAaJ,UAAU,GAAGC,QAA1B;AACAJ,EAAAA,IAAI,CAACQ,KAAL,IAAcL,UAAU,GAAGC,QAA3B;AACA,SAAOJ,IAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASS,cAAT,CAAwBC,MAAxB,EAAgCC,IAAhC,EAAsC;AACpC,MAAIC,KAAK,GAAGD,IAAI,KAAK,GAAT,GAAe,MAAf,GAAwB,KAApC;AACA,MAAIE,KAAK,GAAGD,KAAK,KAAK,MAAV,GAAmB,OAAnB,GAA6B,QAAzC;AAEA,SAAOE,UAAU,CAACJ,MAAM,CAAC,WAAWE,KAAX,GAAmB,OAApB,CAAP,EAAqC,EAArC,CAAV,GAAqDE,UAAU,CAACJ,MAAM,CAAC,WAAWG,KAAX,GAAmB,OAApB,CAAP,EAAqC,EAArC,CAAtE;AACD;;AAED,SAASE,OAAT,CAAiBJ,IAAjB,EAAuBzD,IAAvB,EAA6B2C,IAA7B,EAAmCmB,aAAnC,EAAkD;AAChD,SAAOC,IAAI,CAACC,GAAL,CAAShE,IAAI,CAAC,WAAWyD,IAAZ,CAAb,EAAgCzD,IAAI,CAAC,WAAWyD,IAAZ,CAApC,EAAuDd,IAAI,CAAC,WAAWc,IAAZ,CAA3D,EAA8Ed,IAAI,CAAC,WAAWc,IAAZ,CAAlF,EAAqGd,IAAI,CAAC,WAAWc,IAAZ,CAAzG,EAA4H9C,IAAI,CAAC,EAAD,CAAJ,GAAWgC,IAAI,CAAC,WAAWc,IAAZ,CAAJ,GAAwBK,aAAa,CAAC,YAAYL,IAAI,KAAK,QAAT,GAAoB,KAApB,GAA4B,MAAxC,CAAD,CAArC,GAAyFK,aAAa,CAAC,YAAYL,IAAI,KAAK,QAAT,GAAoB,QAApB,GAA+B,OAA3C,CAAD,CAAjH,GAAyK,CAArS,CAAP;AACD;;AAED,SAASQ,cAAT,GAA0B;AACxB,MAAIjE,IAAI,GAAGnC,QAAQ,CAACmC,IAApB;AACA,MAAI2C,IAAI,GAAG9E,QAAQ,CAACiD,eAApB;AACA,MAAIgD,aAAa,GAAGnD,IAAI,CAAC,EAAD,CAAJ,IAAYjB,gBAAgB,CAACiD,IAAD,CAAhD;AAEA,SAAO;AACLuB,IAAAA,MAAM,EAAEL,OAAO,CAAC,QAAD,EAAW7D,IAAX,EAAiB2C,IAAjB,EAAuBmB,aAAvB,CADV;AAELK,IAAAA,KAAK,EAAEN,OAAO,CAAC,OAAD,EAAU7D,IAAV,EAAgB2C,IAAhB,EAAsBmB,aAAtB;AAFT,GAAP;AAID;;AAED,IAAIM,cAAc,GAAG,UAAUC,QAAV,EAAoBC,WAApB,EAAiC;AACpD,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AACtC,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AACD;AACF,CAJD;;AAMA,IAAIC,WAAW,GAAG,YAAY;AAC5B,WAASC,gBAAT,CAA0BC,MAA1B,EAAkCC,KAAlC,EAAyC;AACvC,SAAK,IAAI3G,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2G,KAAK,CAAC1G,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,UAAI4G,UAAU,GAAGD,KAAK,CAAC3G,CAAD,CAAtB;AACA4G,MAAAA,UAAU,CAACC,UAAX,GAAwBD,UAAU,CAACC,UAAX,IAAyB,KAAjD;AACAD,MAAAA,UAAU,CAACE,YAAX,GAA0B,IAA1B;AACA,UAAI,WAAWF,UAAf,EAA2BA,UAAU,CAACG,QAAX,GAAsB,IAAtB;AAC3BC,MAAAA,MAAM,CAACC,cAAP,CAAsBP,MAAtB,EAA8BE,UAAU,CAACM,GAAzC,EAA8CN,UAA9C;AACD;AACF;;AAED,SAAO,UAAUN,WAAV,EAAuBa,UAAvB,EAAmCC,WAAnC,EAAgD;AACrD,QAAID,UAAJ,EAAgBV,gBAAgB,CAACH,WAAW,CAACe,SAAb,EAAwBF,UAAxB,CAAhB;AAChB,QAAIC,WAAJ,EAAiBX,gBAAgB,CAACH,WAAD,EAAcc,WAAd,CAAhB;AACjB,WAAOd,WAAP;AACD,GAJD;AAKD,CAhBiB,EAAlB;;AAsBA,IAAIW,cAAc,GAAG,UAAUK,GAAV,EAAeJ,GAAf,EAAoBK,KAApB,EAA2B;AAC9C,MAAIL,GAAG,IAAII,GAAX,EAAgB;AACdN,IAAAA,MAAM,CAACC,cAAP,CAAsBK,GAAtB,EAA2BJ,GAA3B,EAAgC;AAC9BK,MAAAA,KAAK,EAAEA,KADuB;AAE9BV,MAAAA,UAAU,EAAE,IAFkB;AAG9BC,MAAAA,YAAY,EAAE,IAHgB;AAI9BC,MAAAA,QAAQ,EAAE;AAJoB,KAAhC;AAMD,GAPD,MAOO;AACLO,IAAAA,GAAG,CAACJ,GAAD,CAAH,GAAWK,KAAX;AACD;;AAED,SAAOD,GAAP;AACD,CAbD;;AAeA,IAAIE,QAAQ,GAAGR,MAAM,CAACS,MAAP,IAAiB,UAAUf,MAAV,EAAkB;AAChD,OAAK,IAAI1G,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwE,SAAS,CAACvE,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzC,QAAI0H,MAAM,GAAGlD,SAAS,CAACxE,CAAD,CAAtB;;AAEA,SAAK,IAAIkH,GAAT,IAAgBQ,MAAhB,EAAwB;AACtB,UAAIV,MAAM,CAACK,SAAP,CAAiBM,cAAjB,CAAgCvG,IAAhC,CAAqCsG,MAArC,EAA6CR,GAA7C,CAAJ,EAAuD;AACrDR,QAAAA,MAAM,CAACQ,GAAD,CAAN,GAAcQ,MAAM,CAACR,GAAD,CAApB;AACD;AACF;AACF;;AAED,SAAOR,MAAP;AACD,CAZD;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASkB,aAAT,CAAuBC,OAAvB,EAAgC;AAC9B,SAAOL,QAAQ,CAAC,EAAD,EAAKK,OAAL,EAAc;AAC3BvC,IAAAA,KAAK,EAAEuC,OAAO,CAACxC,IAAR,GAAewC,OAAO,CAAC1B,KADH;AAE3Bf,IAAAA,MAAM,EAAEyC,OAAO,CAAC1C,GAAR,GAAc0C,OAAO,CAAC3B;AAFH,GAAd,CAAf;AAID;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS4B,qBAAT,CAA+BxG,OAA/B,EAAwC;AACtC,MAAIwD,IAAI,GAAG,EAAX,CADsC,CAGtC;AACA;AACA;;AACA,MAAI;AACF,QAAInC,IAAI,CAAC,EAAD,CAAR,EAAc;AACZmC,MAAAA,IAAI,GAAGxD,OAAO,CAACwG,qBAAR,EAAP;AACA,UAAI9C,SAAS,GAAGV,SAAS,CAAChD,OAAD,EAAU,KAAV,CAAzB;AACA,UAAI2D,UAAU,GAAGX,SAAS,CAAChD,OAAD,EAAU,MAAV,CAA1B;AACAwD,MAAAA,IAAI,CAACK,GAAL,IAAYH,SAAZ;AACAF,MAAAA,IAAI,CAACO,IAAL,IAAaJ,UAAb;AACAH,MAAAA,IAAI,CAACM,MAAL,IAAeJ,SAAf;AACAF,MAAAA,IAAI,CAACQ,KAAL,IAAcL,UAAd;AACD,KARD,MAQO;AACLH,MAAAA,IAAI,GAAGxD,OAAO,CAACwG,qBAAR,EAAP;AACD;AACF,GAZD,CAYE,OAAOC,CAAP,EAAU,CAAE;;AAEd,MAAIC,MAAM,GAAG;AACX3C,IAAAA,IAAI,EAAEP,IAAI,CAACO,IADA;AAEXF,IAAAA,GAAG,EAAEL,IAAI,CAACK,GAFC;AAGXgB,IAAAA,KAAK,EAAErB,IAAI,CAACQ,KAAL,GAAaR,IAAI,CAACO,IAHd;AAIXa,IAAAA,MAAM,EAAEpB,IAAI,CAACM,MAAL,GAAcN,IAAI,CAACK;AAJhB,GAAb,CApBsC,CA2BtC;;AACA,MAAI8C,KAAK,GAAG3G,OAAO,CAACM,QAAR,KAAqB,MAArB,GAA8BqE,cAAc,EAA5C,GAAiD,EAA7D;AACA,MAAIE,KAAK,GAAG8B,KAAK,CAAC9B,KAAN,IAAe7E,OAAO,CAAC4G,WAAvB,IAAsCF,MAAM,CAAC1C,KAAP,GAAe0C,MAAM,CAAC3C,IAAxE;AACA,MAAIa,MAAM,GAAG+B,KAAK,CAAC/B,MAAN,IAAgB5E,OAAO,CAAC6G,YAAxB,IAAwCH,MAAM,CAAC5C,MAAP,GAAgB4C,MAAM,CAAC7C,GAA5E;AAEA,MAAIiD,cAAc,GAAG9G,OAAO,CAAC+G,WAAR,GAAsBlC,KAA3C;AACA,MAAImC,aAAa,GAAGhH,OAAO,CAACiH,YAAR,GAAuBrC,MAA3C,CAjCsC,CAmCtC;AACA;;AACA,MAAIkC,cAAc,IAAIE,aAAtB,EAAqC;AACnC,QAAI9C,MAAM,GAAGnE,wBAAwB,CAACC,OAAD,CAArC;AACA8G,IAAAA,cAAc,IAAI7C,cAAc,CAACC,MAAD,EAAS,GAAT,CAAhC;AACA8C,IAAAA,aAAa,IAAI/C,cAAc,CAACC,MAAD,EAAS,GAAT,CAA/B;AAEAwC,IAAAA,MAAM,CAAC7B,KAAP,IAAgBiC,cAAhB;AACAJ,IAAAA,MAAM,CAAC9B,MAAP,IAAiBoC,aAAjB;AACD;;AAED,SAAOV,aAAa,CAACI,MAAD,CAApB;AACD;;AAED,SAASQ,oCAAT,CAA8CC,QAA9C,EAAwDC,MAAxD,EAAgE;AAC9D,MAAIC,aAAa,GAAGnE,SAAS,CAACvE,MAAV,GAAmB,CAAnB,IAAwBuE,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAAzC,GAAqDD,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAAxF;AAEA,MAAI9B,MAAM,GAAGC,IAAI,CAAC,EAAD,CAAjB;AACA,MAAIiG,MAAM,GAAGF,MAAM,CAAC9G,QAAP,KAAoB,MAAjC;AACA,MAAIiH,YAAY,GAAGf,qBAAqB,CAACW,QAAD,CAAxC;AACA,MAAIK,UAAU,GAAGhB,qBAAqB,CAACY,MAAD,CAAtC;AACA,MAAIK,YAAY,GAAGhH,eAAe,CAAC0G,QAAD,CAAlC;AAEA,MAAIjD,MAAM,GAAGnE,wBAAwB,CAACqH,MAAD,CAArC;AACA,MAAIM,cAAc,GAAGpD,UAAU,CAACJ,MAAM,CAACwD,cAAR,EAAwB,EAAxB,CAA/B;AACA,MAAIC,eAAe,GAAGrD,UAAU,CAACJ,MAAM,CAACyD,eAAR,EAAyB,EAAzB,CAAhC,CAX8D,CAa9D;;AACA,MAAIN,aAAa,IAAID,MAAM,CAAC9G,QAAP,KAAoB,MAAzC,EAAiD;AAC/CkH,IAAAA,UAAU,CAAC3D,GAAX,GAAiBY,IAAI,CAACC,GAAL,CAAS8C,UAAU,CAAC3D,GAApB,EAAyB,CAAzB,CAAjB;AACA2D,IAAAA,UAAU,CAACzD,IAAX,GAAkBU,IAAI,CAACC,GAAL,CAAS8C,UAAU,CAACzD,IAApB,EAA0B,CAA1B,CAAlB;AACD;;AACD,MAAIwC,OAAO,GAAGD,aAAa,CAAC;AAC1BzC,IAAAA,GAAG,EAAE0D,YAAY,CAAC1D,GAAb,GAAmB2D,UAAU,CAAC3D,GAA9B,GAAoC6D,cADf;AAE1B3D,IAAAA,IAAI,EAAEwD,YAAY,CAACxD,IAAb,GAAoByD,UAAU,CAACzD,IAA/B,GAAsC4D,eAFlB;AAG1B9C,IAAAA,KAAK,EAAE0C,YAAY,CAAC1C,KAHM;AAI1BD,IAAAA,MAAM,EAAE2C,YAAY,CAAC3C;AAJK,GAAD,CAA3B;AAMA2B,EAAAA,OAAO,CAACqB,SAAR,GAAoB,CAApB;AACArB,EAAAA,OAAO,CAACsB,UAAR,GAAqB,CAArB,CAzB8D,CA2B9D;AACA;AACA;AACA;;AACA,MAAI,CAACzG,MAAD,IAAWkG,MAAf,EAAuB;AACrB,QAAIM,SAAS,GAAGtD,UAAU,CAACJ,MAAM,CAAC0D,SAAR,EAAmB,EAAnB,CAA1B;AACA,QAAIC,UAAU,GAAGvD,UAAU,CAACJ,MAAM,CAAC2D,UAAR,EAAoB,EAApB,CAA3B;AAEAtB,IAAAA,OAAO,CAAC1C,GAAR,IAAe6D,cAAc,GAAGE,SAAhC;AACArB,IAAAA,OAAO,CAACzC,MAAR,IAAkB4D,cAAc,GAAGE,SAAnC;AACArB,IAAAA,OAAO,CAACxC,IAAR,IAAgB4D,eAAe,GAAGE,UAAlC;AACAtB,IAAAA,OAAO,CAACvC,KAAR,IAAiB2D,eAAe,GAAGE,UAAnC,CAPqB,CASrB;;AACAtB,IAAAA,OAAO,CAACqB,SAAR,GAAoBA,SAApB;AACArB,IAAAA,OAAO,CAACsB,UAAR,GAAqBA,UAArB;AACD;;AAED,MAAIzG,MAAM,IAAI,CAACiG,aAAX,GAA2BD,MAAM,CAACtE,QAAP,CAAgB2E,YAAhB,CAA3B,GAA2DL,MAAM,KAAKK,YAAX,IAA2BA,YAAY,CAACnH,QAAb,KAA0B,MAApH,EAA4H;AAC1HiG,IAAAA,OAAO,GAAGhD,aAAa,CAACgD,OAAD,EAAUa,MAAV,CAAvB;AACD;;AAED,SAAOb,OAAP;AACD;;AAED,SAASuB,6CAAT,CAAuD9H,OAAvD,EAAgE;AAC9D,MAAI+H,aAAa,GAAG7E,SAAS,CAACvE,MAAV,GAAmB,CAAnB,IAAwBuE,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAAzC,GAAqDD,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAAxF;AAEA,MAAIG,IAAI,GAAGrD,OAAO,CAACW,aAAR,CAAsBa,eAAjC;AACA,MAAIwG,cAAc,GAAGd,oCAAoC,CAAClH,OAAD,EAAUqD,IAAV,CAAzD;AACA,MAAIwB,KAAK,GAAGJ,IAAI,CAACC,GAAL,CAASrB,IAAI,CAACuD,WAAd,EAA2BtI,MAAM,CAAC2J,UAAP,IAAqB,CAAhD,CAAZ;AACA,MAAIrD,MAAM,GAAGH,IAAI,CAACC,GAAL,CAASrB,IAAI,CAACwD,YAAd,EAA4BvI,MAAM,CAAC4J,WAAP,IAAsB,CAAlD,CAAb;AAEA,MAAIxE,SAAS,GAAG,CAACqE,aAAD,GAAiB/E,SAAS,CAACK,IAAD,CAA1B,GAAmC,CAAnD;AACA,MAAIM,UAAU,GAAG,CAACoE,aAAD,GAAiB/E,SAAS,CAACK,IAAD,EAAO,MAAP,CAA1B,GAA2C,CAA5D;AAEA,MAAI8E,MAAM,GAAG;AACXtE,IAAAA,GAAG,EAAEH,SAAS,GAAGsE,cAAc,CAACnE,GAA3B,GAAiCmE,cAAc,CAACJ,SAD1C;AAEX7D,IAAAA,IAAI,EAAEJ,UAAU,GAAGqE,cAAc,CAACjE,IAA5B,GAAmCiE,cAAc,CAACH,UAF7C;AAGXhD,IAAAA,KAAK,EAAEA,KAHI;AAIXD,IAAAA,MAAM,EAAEA;AAJG,GAAb;AAOA,SAAO0B,aAAa,CAAC6B,MAAD,CAApB;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,OAAT,CAAiBpI,OAAjB,EAA0B;AACxB,MAAIM,QAAQ,GAAGN,OAAO,CAACM,QAAvB;;AACA,MAAIA,QAAQ,KAAK,MAAb,IAAuBA,QAAQ,KAAK,MAAxC,EAAgD;AAC9C,WAAO,KAAP;AACD;;AACD,MAAIP,wBAAwB,CAACC,OAAD,EAAU,UAAV,CAAxB,KAAkD,OAAtD,EAA+D;AAC7D,WAAO,IAAP;AACD;;AACD,SAAOoI,OAAO,CAAC/H,aAAa,CAACL,OAAD,CAAd,CAAd;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASqI,4BAAT,CAAsCrI,OAAtC,EAA+C;AAC7C;AACA,MAAI,CAACA,OAAD,IAAY,CAACA,OAAO,CAACsI,aAArB,IAAsCjH,IAAI,EAA9C,EAAkD;AAChD,WAAO9C,QAAQ,CAACiD,eAAhB;AACD;;AACD,MAAI+G,EAAE,GAAGvI,OAAO,CAACsI,aAAjB;;AACA,SAAOC,EAAE,IAAIxI,wBAAwB,CAACwI,EAAD,EAAK,WAAL,CAAxB,KAA8C,MAA3D,EAAmE;AACjEA,IAAAA,EAAE,GAAGA,EAAE,CAACD,aAAR;AACD;;AACD,SAAOC,EAAE,IAAIhK,QAAQ,CAACiD,eAAtB;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASgH,aAAT,CAAuBC,MAAvB,EAA+BC,SAA/B,EAA0CC,OAA1C,EAAmDC,iBAAnD,EAAsE;AACpE,MAAIvB,aAAa,GAAGnE,SAAS,CAACvE,MAAV,GAAmB,CAAnB,IAAwBuE,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAAzC,GAAqDD,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAAxF,CADoE,CAGpE;;AAEA,MAAI2F,UAAU,GAAG;AAAEhF,IAAAA,GAAG,EAAE,CAAP;AAAUE,IAAAA,IAAI,EAAE;AAAhB,GAAjB;AACA,MAAIrC,YAAY,GAAG2F,aAAa,GAAGgB,4BAA4B,CAACI,MAAD,CAA/B,GAA0CzG,sBAAsB,CAACyG,MAAD,EAASC,SAAT,CAAhG,CANoE,CAQpE;;AACA,MAAIE,iBAAiB,KAAK,UAA1B,EAAsC;AACpCC,IAAAA,UAAU,GAAGf,6CAA6C,CAACpG,YAAD,EAAe2F,aAAf,CAA1D;AACD,GAFD,MAEO;AACL;AACA,QAAIyB,cAAc,GAAG,KAAK,CAA1B;;AACA,QAAIF,iBAAiB,KAAK,cAA1B,EAA0C;AACxCE,MAAAA,cAAc,GAAGrI,eAAe,CAACJ,aAAa,CAACqI,SAAD,CAAd,CAAhC;;AACA,UAAII,cAAc,CAACxI,QAAf,KAA4B,MAAhC,EAAwC;AACtCwI,QAAAA,cAAc,GAAGL,MAAM,CAAC9H,aAAP,CAAqBa,eAAtC;AACD;AACF,KALD,MAKO,IAAIoH,iBAAiB,KAAK,QAA1B,EAAoC;AACzCE,MAAAA,cAAc,GAAGL,MAAM,CAAC9H,aAAP,CAAqBa,eAAtC;AACD,KAFM,MAEA;AACLsH,MAAAA,cAAc,GAAGF,iBAAjB;AACD;;AAED,QAAIrC,OAAO,GAAGW,oCAAoC,CAAC4B,cAAD,EAAiBpH,YAAjB,EAA+B2F,aAA/B,CAAlD,CAdK,CAgBL;;AACA,QAAIyB,cAAc,CAACxI,QAAf,KAA4B,MAA5B,IAAsC,CAAC8H,OAAO,CAAC1G,YAAD,CAAlD,EAAkE;AAChE,UAAIqH,eAAe,GAAGpE,cAAc,EAApC;AAAA,UACIC,MAAM,GAAGmE,eAAe,CAACnE,MAD7B;AAAA,UAEIC,KAAK,GAAGkE,eAAe,CAAClE,KAF5B;;AAIAgE,MAAAA,UAAU,CAAChF,GAAX,IAAkB0C,OAAO,CAAC1C,GAAR,GAAc0C,OAAO,CAACqB,SAAxC;AACAiB,MAAAA,UAAU,CAAC/E,MAAX,GAAoBc,MAAM,GAAG2B,OAAO,CAAC1C,GAArC;AACAgF,MAAAA,UAAU,CAAC9E,IAAX,IAAmBwC,OAAO,CAACxC,IAAR,GAAewC,OAAO,CAACsB,UAA1C;AACAgB,MAAAA,UAAU,CAAC7E,KAAX,GAAmBa,KAAK,GAAG0B,OAAO,CAACxC,IAAnC;AACD,KATD,MASO;AACL;AACA8E,MAAAA,UAAU,GAAGtC,OAAb;AACD;AACF,GAzCmE,CA2CpE;;;AACAsC,EAAAA,UAAU,CAAC9E,IAAX,IAAmB4E,OAAnB;AACAE,EAAAA,UAAU,CAAChF,GAAX,IAAkB8E,OAAlB;AACAE,EAAAA,UAAU,CAAC7E,KAAX,IAAoB2E,OAApB;AACAE,EAAAA,UAAU,CAAC/E,MAAX,IAAqB6E,OAArB;AAEA,SAAOE,UAAP;AACD;;AAED,SAASG,OAAT,CAAiBC,IAAjB,EAAuB;AACrB,MAAIpE,KAAK,GAAGoE,IAAI,CAACpE,KAAjB;AAAA,MACID,MAAM,GAAGqE,IAAI,CAACrE,MADlB;AAGA,SAAOC,KAAK,GAAGD,MAAf;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASsE,oBAAT,CAA8BC,SAA9B,EAAyCC,OAAzC,EAAkDX,MAAlD,EAA0DC,SAA1D,EAAqEE,iBAArE,EAAwF;AACtF,MAAID,OAAO,GAAGzF,SAAS,CAACvE,MAAV,GAAmB,CAAnB,IAAwBuE,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAAzC,GAAqDD,SAAS,CAAC,CAAD,CAA9D,GAAoE,CAAlF;;AAEA,MAAIiG,SAAS,CAACrK,OAAV,CAAkB,MAAlB,MAA8B,CAAC,CAAnC,EAAsC;AACpC,WAAOqK,SAAP;AACD;;AAED,MAAIN,UAAU,GAAGL,aAAa,CAACC,MAAD,EAASC,SAAT,EAAoBC,OAApB,EAA6BC,iBAA7B,CAA9B;AAEA,MAAIS,KAAK,GAAG;AACVxF,IAAAA,GAAG,EAAE;AACHgB,MAAAA,KAAK,EAAEgE,UAAU,CAAChE,KADf;AAEHD,MAAAA,MAAM,EAAEwE,OAAO,CAACvF,GAAR,GAAcgF,UAAU,CAAChF;AAF9B,KADK;AAKVG,IAAAA,KAAK,EAAE;AACLa,MAAAA,KAAK,EAAEgE,UAAU,CAAC7E,KAAX,GAAmBoF,OAAO,CAACpF,KAD7B;AAELY,MAAAA,MAAM,EAAEiE,UAAU,CAACjE;AAFd,KALG;AASVd,IAAAA,MAAM,EAAE;AACNe,MAAAA,KAAK,EAAEgE,UAAU,CAAChE,KADZ;AAEND,MAAAA,MAAM,EAAEiE,UAAU,CAAC/E,MAAX,GAAoBsF,OAAO,CAACtF;AAF9B,KATE;AAaVC,IAAAA,IAAI,EAAE;AACJc,MAAAA,KAAK,EAAEuE,OAAO,CAACrF,IAAR,GAAe8E,UAAU,CAAC9E,IAD7B;AAEJa,MAAAA,MAAM,EAAEiE,UAAU,CAACjE;AAFf;AAbI,GAAZ;AAmBA,MAAI0E,WAAW,GAAG5D,MAAM,CAAC6D,IAAP,CAAYF,KAAZ,EAAmBG,GAAnB,CAAuB,UAAU5D,GAAV,EAAe;AACtD,WAAOM,QAAQ,CAAC;AACdN,MAAAA,GAAG,EAAEA;AADS,KAAD,EAEZyD,KAAK,CAACzD,GAAD,CAFO,EAEA;AACb6D,MAAAA,IAAI,EAAET,OAAO,CAACK,KAAK,CAACzD,GAAD,CAAN;AADA,KAFA,CAAf;AAKD,GANiB,EAMf8D,IANe,CAMV,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACtB,WAAOA,CAAC,CAACH,IAAF,GAASE,CAAC,CAACF,IAAlB;AACD,GARiB,CAAlB;AAUA,MAAII,aAAa,GAAGP,WAAW,CAACQ,MAAZ,CAAmB,UAAUC,KAAV,EAAiB;AACtD,QAAIlF,KAAK,GAAGkF,KAAK,CAAClF,KAAlB;AAAA,QACID,MAAM,GAAGmF,KAAK,CAACnF,MADnB;AAEA,WAAOC,KAAK,IAAI4D,MAAM,CAAC7B,WAAhB,IAA+BhC,MAAM,IAAI6D,MAAM,CAAC5B,YAAvD;AACD,GAJmB,CAApB;AAMA,MAAImD,iBAAiB,GAAGH,aAAa,CAAClL,MAAd,GAAuB,CAAvB,GAA2BkL,aAAa,CAAC,CAAD,CAAb,CAAiBjE,GAA5C,GAAkD0D,WAAW,CAAC,CAAD,CAAX,CAAe1D,GAAzF;AAEA,MAAIqE,SAAS,GAAGd,SAAS,CAACe,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAAhB;AAEA,SAAOF,iBAAiB,IAAIC,SAAS,GAAG,MAAMA,SAAT,GAAqB,EAAlC,CAAxB;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,mBAAT,CAA6BC,KAA7B,EAAoC3B,MAApC,EAA4CC,SAA5C,EAAuD;AACrD,MAAIrB,aAAa,GAAGnE,SAAS,CAACvE,MAAV,GAAmB,CAAnB,IAAwBuE,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAAzC,GAAqDD,SAAS,CAAC,CAAD,CAA9D,GAAoE,IAAxF;AAEA,MAAImH,kBAAkB,GAAGhD,aAAa,GAAGgB,4BAA4B,CAACI,MAAD,CAA/B,GAA0CzG,sBAAsB,CAACyG,MAAD,EAASC,SAAT,CAAtG;AACA,SAAOxB,oCAAoC,CAACwB,SAAD,EAAY2B,kBAAZ,EAAgChD,aAAhC,CAA3C;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASiD,aAAT,CAAuBtK,OAAvB,EAAgC;AAC9B,MAAIkE,MAAM,GAAG9D,gBAAgB,CAACJ,OAAD,CAA7B;AACA,MAAIuK,CAAC,GAAGjG,UAAU,CAACJ,MAAM,CAAC0D,SAAR,CAAV,GAA+BtD,UAAU,CAACJ,MAAM,CAACsG,YAAR,CAAjD;AACA,MAAIC,CAAC,GAAGnG,UAAU,CAACJ,MAAM,CAAC2D,UAAR,CAAV,GAAgCvD,UAAU,CAACJ,MAAM,CAACwG,WAAR,CAAlD;AACA,MAAIhE,MAAM,GAAG;AACX7B,IAAAA,KAAK,EAAE7E,OAAO,CAAC+G,WAAR,GAAsB0D,CADlB;AAEX7F,IAAAA,MAAM,EAAE5E,OAAO,CAACiH,YAAR,GAAuBsD;AAFpB,GAAb;AAIA,SAAO7D,MAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASiE,oBAAT,CAA8BxB,SAA9B,EAAyC;AACvC,MAAIyB,IAAI,GAAG;AAAE7G,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,KAAK,EAAE,MAAxB;AAAgCF,IAAAA,MAAM,EAAE,KAAxC;AAA+CD,IAAAA,GAAG,EAAE;AAApD,GAAX;AACA,SAAOsF,SAAS,CAAC0B,OAAV,CAAkB,wBAAlB,EAA4C,UAAUC,OAAV,EAAmB;AACpE,WAAOF,IAAI,CAACE,OAAD,CAAX;AACD,GAFM,CAAP;AAGD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,gBAAT,CAA0BtC,MAA1B,EAAkCuC,gBAAlC,EAAoD7B,SAApD,EAA+D;AAC7DA,EAAAA,SAAS,GAAGA,SAAS,CAACe,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAAZ,CAD6D,CAG7D;;AACA,MAAIe,UAAU,GAAGX,aAAa,CAAC7B,MAAD,CAA9B,CAJ6D,CAM7D;;AACA,MAAIyC,aAAa,GAAG;AAClBrG,IAAAA,KAAK,EAAEoG,UAAU,CAACpG,KADA;AAElBD,IAAAA,MAAM,EAAEqG,UAAU,CAACrG;AAFD,GAApB,CAP6D,CAY7D;;AACA,MAAIuG,OAAO,GAAG,CAAC,OAAD,EAAU,MAAV,EAAkBrM,OAAlB,CAA0BqK,SAA1B,MAAyC,CAAC,CAAxD;AACA,MAAIiC,QAAQ,GAAGD,OAAO,GAAG,KAAH,GAAW,MAAjC;AACA,MAAIE,aAAa,GAAGF,OAAO,GAAG,MAAH,GAAY,KAAvC;AACA,MAAIG,WAAW,GAAGH,OAAO,GAAG,QAAH,GAAc,OAAvC;AACA,MAAII,oBAAoB,GAAG,CAACJ,OAAD,GAAW,QAAX,GAAsB,OAAjD;AAEAD,EAAAA,aAAa,CAACE,QAAD,CAAb,GAA0BJ,gBAAgB,CAACI,QAAD,CAAhB,GAA6BJ,gBAAgB,CAACM,WAAD,CAAhB,GAAgC,CAA7D,GAAiEL,UAAU,CAACK,WAAD,CAAV,GAA0B,CAArH;;AACA,MAAInC,SAAS,KAAKkC,aAAlB,EAAiC;AAC/BH,IAAAA,aAAa,CAACG,aAAD,CAAb,GAA+BL,gBAAgB,CAACK,aAAD,CAAhB,GAAkCJ,UAAU,CAACM,oBAAD,CAA3E;AACD,GAFD,MAEO;AACLL,IAAAA,aAAa,CAACG,aAAD,CAAb,GAA+BL,gBAAgB,CAACL,oBAAoB,CAACU,aAAD,CAArB,CAA/C;AACD;;AAED,SAAOH,aAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASM,IAAT,CAAcC,GAAd,EAAmBC,KAAnB,EAA0B;AACxB;AACA,MAAIC,KAAK,CAAC5F,SAAN,CAAgByF,IAApB,EAA0B;AACxB,WAAOC,GAAG,CAACD,IAAJ,CAASE,KAAT,CAAP;AACD,GAJuB,CAMxB;;;AACA,SAAOD,GAAG,CAAC3B,MAAJ,CAAW4B,KAAX,EAAkB,CAAlB,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,SAAT,CAAmBH,GAAnB,EAAwBI,IAAxB,EAA8B5F,KAA9B,EAAqC;AACnC;AACA,MAAI0F,KAAK,CAAC5F,SAAN,CAAgB6F,SAApB,EAA+B;AAC7B,WAAOH,GAAG,CAACG,SAAJ,CAAc,UAAUE,GAAV,EAAe;AAClC,aAAOA,GAAG,CAACD,IAAD,CAAH,KAAc5F,KAArB;AACD,KAFM,CAAP;AAGD,GANkC,CAQnC;;;AACA,MAAI8F,KAAK,GAAGP,IAAI,CAACC,GAAD,EAAM,UAAUzF,GAAV,EAAe;AACnC,WAAOA,GAAG,CAAC6F,IAAD,CAAH,KAAc5F,KAArB;AACD,GAFe,CAAhB;AAGA,SAAOwF,GAAG,CAAC3M,OAAJ,CAAYiN,KAAZ,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,YAAT,CAAsBC,SAAtB,EAAiCC,IAAjC,EAAuCC,IAAvC,EAA6C;AAC3C,MAAIC,cAAc,GAAGD,IAAI,KAAKhJ,SAAT,GAAqB8I,SAArB,GAAiCA,SAAS,CAACI,KAAV,CAAgB,CAAhB,EAAmBT,SAAS,CAACK,SAAD,EAAY,MAAZ,EAAoBE,IAApB,CAA5B,CAAtD;AAEAC,EAAAA,cAAc,CAACE,OAAf,CAAuB,UAAU1I,QAAV,EAAoB;AACzC,QAAIA,QAAQ,CAAC,UAAD,CAAZ,EAA0B;AACxB;AACA2I,MAAAA,OAAO,CAACC,IAAR,CAAa,uDAAb;AACD;;AACD,QAAIxN,EAAE,GAAG4E,QAAQ,CAAC,UAAD,CAAR,IAAwBA,QAAQ,CAAC5E,EAA1C,CALyC,CAKK;;AAC9C,QAAI4E,QAAQ,CAAC6I,OAAT,IAAoB/M,UAAU,CAACV,EAAD,CAAlC,EAAwC;AACtC;AACA;AACA;AACAkN,MAAAA,IAAI,CAAC3F,OAAL,CAAakC,MAAb,GAAsBnC,aAAa,CAAC4F,IAAI,CAAC3F,OAAL,CAAakC,MAAd,CAAnC;AACAyD,MAAAA,IAAI,CAAC3F,OAAL,CAAamC,SAAb,GAAyBpC,aAAa,CAAC4F,IAAI,CAAC3F,OAAL,CAAamC,SAAd,CAAtC;AAEAwD,MAAAA,IAAI,GAAGlN,EAAE,CAACkN,IAAD,EAAOtI,QAAP,CAAT;AACD;AACF,GAfD;AAiBA,SAAOsI,IAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASQ,MAAT,GAAkB;AAChB;AACA,MAAI,KAAKtC,KAAL,CAAWuC,WAAf,EAA4B;AAC1B;AACD;;AAED,MAAIT,IAAI,GAAG;AACTnH,IAAAA,QAAQ,EAAE,IADD;AAETb,IAAAA,MAAM,EAAE,EAFC;AAGT0I,IAAAA,WAAW,EAAE,EAHJ;AAITC,IAAAA,UAAU,EAAE,EAJH;AAKTC,IAAAA,OAAO,EAAE,KALA;AAMTvG,IAAAA,OAAO,EAAE;AANA,GAAX,CANgB,CAehB;;AACA2F,EAAAA,IAAI,CAAC3F,OAAL,CAAamC,SAAb,GAAyByB,mBAAmB,CAAC,KAAKC,KAAN,EAAa,KAAK3B,MAAlB,EAA0B,KAAKC,SAA/B,EAA0C,KAAKqE,OAAL,CAAaC,aAAvD,CAA5C,CAhBgB,CAkBhB;AACA;AACA;;AACAd,EAAAA,IAAI,CAAC/C,SAAL,GAAiBD,oBAAoB,CAAC,KAAK6D,OAAL,CAAa5D,SAAd,EAAyB+C,IAAI,CAAC3F,OAAL,CAAamC,SAAtC,EAAiD,KAAKD,MAAtD,EAA8D,KAAKC,SAAnE,EAA8E,KAAKqE,OAAL,CAAad,SAAb,CAAuBgB,IAAvB,CAA4BrE,iBAA1G,EAA6H,KAAKmE,OAAL,CAAad,SAAb,CAAuBgB,IAAvB,CAA4BtE,OAAzJ,CAArC,CArBgB,CAuBhB;;AACAuD,EAAAA,IAAI,CAACgB,iBAAL,GAAyBhB,IAAI,CAAC/C,SAA9B;AAEA+C,EAAAA,IAAI,CAACc,aAAL,GAAqB,KAAKD,OAAL,CAAaC,aAAlC,CA1BgB,CA4BhB;;AACAd,EAAAA,IAAI,CAAC3F,OAAL,CAAakC,MAAb,GAAsBsC,gBAAgB,CAAC,KAAKtC,MAAN,EAAcyD,IAAI,CAAC3F,OAAL,CAAamC,SAA3B,EAAsCwD,IAAI,CAAC/C,SAA3C,CAAtC;AAEA+C,EAAAA,IAAI,CAAC3F,OAAL,CAAakC,MAAb,CAAoB0E,QAApB,GAA+B,KAAKJ,OAAL,CAAaC,aAAb,GAA6B,OAA7B,GAAuC,UAAtE,CA/BgB,CAiChB;;AACAd,EAAAA,IAAI,GAAGF,YAAY,CAAC,KAAKC,SAAN,EAAiBC,IAAjB,CAAnB,CAlCgB,CAoChB;AACA;;AACA,MAAI,CAAC,KAAK9B,KAAL,CAAWgD,SAAhB,EAA2B;AACzB,SAAKhD,KAAL,CAAWgD,SAAX,GAAuB,IAAvB;AACA,SAAKL,OAAL,CAAaM,QAAb,CAAsBnB,IAAtB;AACD,GAHD,MAGO;AACL,SAAKa,OAAL,CAAaO,QAAb,CAAsBpB,IAAtB;AACD;AACF;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASqB,iBAAT,CAA2BtB,SAA3B,EAAsCuB,YAAtC,EAAoD;AAClD,SAAOvB,SAAS,CAACwB,IAAV,CAAe,UAAUxE,IAAV,EAAgB;AACpC,QAAIyE,IAAI,GAAGzE,IAAI,CAACyE,IAAhB;AAAA,QACIjB,OAAO,GAAGxD,IAAI,CAACwD,OADnB;AAEA,WAAOA,OAAO,IAAIiB,IAAI,KAAKF,YAA3B;AACD,GAJM,CAAP;AAKD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASG,wBAAT,CAAkC1N,QAAlC,EAA4C;AAC1C,MAAI2N,QAAQ,GAAG,CAAC,KAAD,EAAQ,IAAR,EAAc,QAAd,EAAwB,KAAxB,EAA+B,GAA/B,CAAf;AACA,MAAIC,SAAS,GAAG5N,QAAQ,CAAC6N,MAAT,CAAgB,CAAhB,EAAmBC,WAAnB,KAAmC9N,QAAQ,CAACoM,KAAT,CAAe,CAAf,CAAnD;;AAEA,OAAK,IAAI3N,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkP,QAAQ,CAACjP,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxC,QAAIsP,MAAM,GAAGJ,QAAQ,CAAClP,CAAD,CAArB;AACA,QAAIuP,OAAO,GAAGD,MAAM,GAAG,KAAKA,MAAL,GAAcH,SAAjB,GAA6B5N,QAAjD;;AACA,QAAI,OAAO1B,QAAQ,CAACmC,IAAT,CAAcwN,KAAd,CAAoBD,OAApB,CAAP,KAAwC,WAA5C,EAAyD;AACvD,aAAOA,OAAP;AACD;AACF;;AACD,SAAO,IAAP;AACD;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASE,OAAT,GAAmB;AACjB,OAAK/D,KAAL,CAAWuC,WAAX,GAAyB,IAAzB,CADiB,CAGjB;;AACA,MAAIY,iBAAiB,CAAC,KAAKtB,SAAN,EAAiB,YAAjB,CAArB,EAAqD;AACnD,SAAKxD,MAAL,CAAY2F,eAAZ,CAA4B,aAA5B;AACA,SAAK3F,MAAL,CAAYyF,KAAZ,CAAkBf,QAAlB,GAA6B,EAA7B;AACA,SAAK1E,MAAL,CAAYyF,KAAZ,CAAkBrK,GAAlB,GAAwB,EAAxB;AACA,SAAK4E,MAAL,CAAYyF,KAAZ,CAAkBnK,IAAlB,GAAyB,EAAzB;AACA,SAAK0E,MAAL,CAAYyF,KAAZ,CAAkBlK,KAAlB,GAA0B,EAA1B;AACA,SAAKyE,MAAL,CAAYyF,KAAZ,CAAkBpK,MAAlB,GAA2B,EAA3B;AACA,SAAK2E,MAAL,CAAYyF,KAAZ,CAAkBG,UAAlB,GAA+B,EAA/B;AACA,SAAK5F,MAAL,CAAYyF,KAAZ,CAAkBP,wBAAwB,CAAC,WAAD,CAA1C,IAA2D,EAA3D;AACD;;AAED,OAAKW,qBAAL,GAfiB,CAiBjB;AACA;;AACA,MAAI,KAAKvB,OAAL,CAAawB,eAAjB,EAAkC;AAChC,SAAK9F,MAAL,CAAYlI,UAAZ,CAAuBiO,WAAvB,CAAmC,KAAK/F,MAAxC;AACD;;AACD,SAAO,IAAP;AACD;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASgG,SAAT,CAAmBzO,OAAnB,EAA4B;AAC1B,MAAIW,aAAa,GAAGX,OAAO,CAACW,aAA5B;AACA,SAAOA,aAAa,GAAGA,aAAa,CAAC+N,WAAjB,GAA+BpQ,MAAnD;AACD;;AAED,SAASqQ,qBAAT,CAA+BlH,YAA/B,EAA6CmH,KAA7C,EAAoDC,QAApD,EAA8DC,aAA9D,EAA6E;AAC3E,MAAIC,MAAM,GAAGtH,YAAY,CAACnH,QAAb,KAA0B,MAAvC;AACA,MAAI8E,MAAM,GAAG2J,MAAM,GAAGtH,YAAY,CAAC9G,aAAb,CAA2B+N,WAA9B,GAA4CjH,YAA/D;AACArC,EAAAA,MAAM,CAAC4J,gBAAP,CAAwBJ,KAAxB,EAA+BC,QAA/B,EAAyC;AAAEI,IAAAA,OAAO,EAAE;AAAX,GAAzC;;AAEA,MAAI,CAACF,MAAL,EAAa;AACXJ,IAAAA,qBAAqB,CAAClO,eAAe,CAAC2E,MAAM,CAAC7E,UAAR,CAAhB,EAAqCqO,KAArC,EAA4CC,QAA5C,EAAsDC,aAAtD,CAArB;AACD;;AACDA,EAAAA,aAAa,CAACI,IAAd,CAAmB9J,MAAnB;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS+J,mBAAT,CAA6BzG,SAA7B,EAAwCqE,OAAxC,EAAiD3C,KAAjD,EAAwDgF,WAAxD,EAAqE;AACnE;AACAhF,EAAAA,KAAK,CAACgF,WAAN,GAAoBA,WAApB;AACAX,EAAAA,SAAS,CAAC/F,SAAD,CAAT,CAAqBsG,gBAArB,CAAsC,QAAtC,EAAgD5E,KAAK,CAACgF,WAAtD,EAAmE;AAAEH,IAAAA,OAAO,EAAE;AAAX,GAAnE,EAHmE,CAKnE;;AACA,MAAII,aAAa,GAAG5O,eAAe,CAACiI,SAAD,CAAnC;AACAiG,EAAAA,qBAAqB,CAACU,aAAD,EAAgB,QAAhB,EAA0BjF,KAAK,CAACgF,WAAhC,EAA6ChF,KAAK,CAAC0E,aAAnD,CAArB;AACA1E,EAAAA,KAAK,CAACiF,aAAN,GAAsBA,aAAtB;AACAjF,EAAAA,KAAK,CAACkF,aAAN,GAAsB,IAAtB;AAEA,SAAOlF,KAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASmF,oBAAT,GAAgC;AAC9B,MAAI,CAAC,KAAKnF,KAAL,CAAWkF,aAAhB,EAA+B;AAC7B,SAAKlF,KAAL,GAAa+E,mBAAmB,CAAC,KAAKzG,SAAN,EAAiB,KAAKqE,OAAtB,EAA+B,KAAK3C,KAApC,EAA2C,KAAKoF,cAAhD,CAAhC;AACD;AACF;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,oBAAT,CAA8B/G,SAA9B,EAAyC0B,KAAzC,EAAgD;AAC9C;AACAqE,EAAAA,SAAS,CAAC/F,SAAD,CAAT,CAAqBgH,mBAArB,CAAyC,QAAzC,EAAmDtF,KAAK,CAACgF,WAAzD,EAF8C,CAI9C;;AACAhF,EAAAA,KAAK,CAAC0E,aAAN,CAAoBxC,OAApB,CAA4B,UAAUlH,MAAV,EAAkB;AAC5CA,IAAAA,MAAM,CAACsK,mBAAP,CAA2B,QAA3B,EAAqCtF,KAAK,CAACgF,WAA3C;AACD,GAFD,EAL8C,CAS9C;;AACAhF,EAAAA,KAAK,CAACgF,WAAN,GAAoB,IAApB;AACAhF,EAAAA,KAAK,CAAC0E,aAAN,GAAsB,EAAtB;AACA1E,EAAAA,KAAK,CAACiF,aAAN,GAAsB,IAAtB;AACAjF,EAAAA,KAAK,CAACkF,aAAN,GAAsB,KAAtB;AACA,SAAOlF,KAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASkE,qBAAT,GAAiC;AAC/B,MAAI,KAAKlE,KAAL,CAAWkF,aAAf,EAA8B;AAC5BK,IAAAA,oBAAoB,CAAC,KAAKH,cAAN,CAApB;AACA,SAAKpF,KAAL,GAAaqF,oBAAoB,CAAC,KAAK/G,SAAN,EAAiB,KAAK0B,KAAtB,CAAjC;AACD;AACF;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASwF,SAAT,CAAmBC,CAAnB,EAAsB;AACpB,SAAOA,CAAC,KAAK,EAAN,IAAY,CAACC,KAAK,CAACxL,UAAU,CAACuL,CAAD,CAAX,CAAlB,IAAqCE,QAAQ,CAACF,CAAD,CAApD;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASG,SAAT,CAAmBhQ,OAAnB,EAA4BkE,MAA5B,EAAoC;AAClCwB,EAAAA,MAAM,CAAC6D,IAAP,CAAYrF,MAAZ,EAAoBoI,OAApB,CAA4B,UAAUT,IAAV,EAAgB;AAC1C,QAAIoE,IAAI,GAAG,EAAX,CAD0C,CAE1C;;AACA,QAAI,CAAC,OAAD,EAAU,QAAV,EAAoB,KAApB,EAA2B,OAA3B,EAAoC,QAApC,EAA8C,MAA9C,EAAsDnR,OAAtD,CAA8D+M,IAA9D,MAAwE,CAAC,CAAzE,IAA8E+D,SAAS,CAAC1L,MAAM,CAAC2H,IAAD,CAAP,CAA3F,EAA2G;AACzGoE,MAAAA,IAAI,GAAG,IAAP;AACD;;AACDjQ,IAAAA,OAAO,CAACkO,KAAR,CAAcrC,IAAd,IAAsB3H,MAAM,CAAC2H,IAAD,CAAN,GAAeoE,IAArC;AACD,GAPD;AAQD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,aAAT,CAAuBlQ,OAAvB,EAAgC6M,UAAhC,EAA4C;AAC1CnH,EAAAA,MAAM,CAAC6D,IAAP,CAAYsD,UAAZ,EAAwBP,OAAxB,CAAgC,UAAUT,IAAV,EAAgB;AAC9C,QAAI5F,KAAK,GAAG4G,UAAU,CAAChB,IAAD,CAAtB;;AACA,QAAI5F,KAAK,KAAK,KAAd,EAAqB;AACnBjG,MAAAA,OAAO,CAACmQ,YAAR,CAAqBtE,IAArB,EAA2BgB,UAAU,CAAChB,IAAD,CAArC;AACD,KAFD,MAEO;AACL7L,MAAAA,OAAO,CAACoO,eAAR,CAAwBvC,IAAxB;AACD;AACF,GAPD;AAQD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASuE,UAAT,CAAoBlE,IAApB,EAA0B;AACxB;AACA;AACA;AACA;AACA8D,EAAAA,SAAS,CAAC9D,IAAI,CAACnH,QAAL,CAAc0D,MAAf,EAAuByD,IAAI,CAAChI,MAA5B,CAAT,CALwB,CAOxB;AACA;;AACAgM,EAAAA,aAAa,CAAChE,IAAI,CAACnH,QAAL,CAAc0D,MAAf,EAAuByD,IAAI,CAACW,UAA5B,CAAb,CATwB,CAWxB;;AACA,MAAIX,IAAI,CAACmE,YAAL,IAAqB3K,MAAM,CAAC6D,IAAP,CAAY2C,IAAI,CAACU,WAAjB,EAA8BjO,MAAvD,EAA+D;AAC7DqR,IAAAA,SAAS,CAAC9D,IAAI,CAACmE,YAAN,EAAoBnE,IAAI,CAACU,WAAzB,CAAT;AACD;;AAED,SAAOV,IAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASoE,gBAAT,CAA0B5H,SAA1B,EAAqCD,MAArC,EAA6CsE,OAA7C,EAAsDwD,eAAtD,EAAuEnG,KAAvE,EAA8E;AAC5E;AACA,MAAIY,gBAAgB,GAAGb,mBAAmB,CAACC,KAAD,EAAQ3B,MAAR,EAAgBC,SAAhB,EAA2BqE,OAAO,CAACC,aAAnC,CAA1C,CAF4E,CAI5E;AACA;AACA;;AACA,MAAI7D,SAAS,GAAGD,oBAAoB,CAAC6D,OAAO,CAAC5D,SAAT,EAAoB6B,gBAApB,EAAsCvC,MAAtC,EAA8CC,SAA9C,EAAyDqE,OAAO,CAACd,SAAR,CAAkBgB,IAAlB,CAAuBrE,iBAAhF,EAAmGmE,OAAO,CAACd,SAAR,CAAkBgB,IAAlB,CAAuBtE,OAA1H,CAApC;AAEAF,EAAAA,MAAM,CAAC0H,YAAP,CAAoB,aAApB,EAAmChH,SAAnC,EAT4E,CAW5E;AACA;;AACA6G,EAAAA,SAAS,CAACvH,MAAD,EAAS;AAAE0E,IAAAA,QAAQ,EAAEJ,OAAO,CAACC,aAAR,GAAwB,OAAxB,GAAkC;AAA9C,GAAT,CAAT;AAEA,SAAOD,OAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASyD,YAAT,CAAsBtE,IAAtB,EAA4Ba,OAA5B,EAAqC;AACnC,MAAIxC,CAAC,GAAGwC,OAAO,CAACxC,CAAhB;AAAA,MACIE,CAAC,GAAGsC,OAAO,CAACtC,CADhB;AAEA,MAAIhC,MAAM,GAAGyD,IAAI,CAAC3F,OAAL,CAAakC,MAA1B,CAHmC,CAKnC;;AAEA,MAAIgI,2BAA2B,GAAGjF,IAAI,CAACU,IAAI,CAACnH,QAAL,CAAckH,SAAf,EAA0B,UAAUrI,QAAV,EAAoB;AAClF,WAAOA,QAAQ,CAAC8J,IAAT,KAAkB,YAAzB;AACD,GAFqC,CAAJ,CAE/BgD,eAFH;;AAGA,MAAID,2BAA2B,KAAKtN,SAApC,EAA+C;AAC7CoJ,IAAAA,OAAO,CAACC,IAAR,CAAa,+HAAb;AACD;;AACD,MAAIkE,eAAe,GAAGD,2BAA2B,KAAKtN,SAAhC,GAA4CsN,2BAA5C,GAA0E1D,OAAO,CAAC2D,eAAxG;AAEA,MAAIhP,YAAY,GAAGH,eAAe,CAAC2K,IAAI,CAACnH,QAAL,CAAc0D,MAAf,CAAlC;AACA,MAAIkI,gBAAgB,GAAGnK,qBAAqB,CAAC9E,YAAD,CAA5C,CAhBmC,CAkBnC;;AACA,MAAIwC,MAAM,GAAG;AACXiJ,IAAAA,QAAQ,EAAE1E,MAAM,CAAC0E;AADN,GAAb,CAnBmC,CAuBnC;AACA;AACA;;AACA,MAAI5G,OAAO,GAAG;AACZxC,IAAAA,IAAI,EAAEU,IAAI,CAACmM,KAAL,CAAWnI,MAAM,CAAC1E,IAAlB,CADM;AAEZF,IAAAA,GAAG,EAAEY,IAAI,CAACoM,KAAL,CAAWpI,MAAM,CAAC5E,GAAlB,CAFO;AAGZC,IAAAA,MAAM,EAAEW,IAAI,CAACoM,KAAL,CAAWpI,MAAM,CAAC3E,MAAlB,CAHI;AAIZE,IAAAA,KAAK,EAAES,IAAI,CAACmM,KAAL,CAAWnI,MAAM,CAACzE,KAAlB;AAJK,GAAd;AAOA,MAAII,KAAK,GAAGmG,CAAC,KAAK,QAAN,GAAiB,KAAjB,GAAyB,QAArC;AACA,MAAIlG,KAAK,GAAGoG,CAAC,KAAK,OAAN,GAAgB,MAAhB,GAAyB,OAArC,CAlCmC,CAoCnC;AACA;AACA;;AACA,MAAIqG,gBAAgB,GAAGnD,wBAAwB,CAAC,WAAD,CAA/C,CAvCmC,CAyCnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAI5J,IAAI,GAAG,KAAK,CAAhB;AAAA,MACIF,GAAG,GAAG,KAAK,CADf;;AAEA,MAAIO,KAAK,KAAK,QAAd,EAAwB;AACtBP,IAAAA,GAAG,GAAG,CAAC8M,gBAAgB,CAAC/L,MAAlB,GAA2B2B,OAAO,CAACzC,MAAzC;AACD,GAFD,MAEO;AACLD,IAAAA,GAAG,GAAG0C,OAAO,CAAC1C,GAAd;AACD;;AACD,MAAIQ,KAAK,KAAK,OAAd,EAAuB;AACrBN,IAAAA,IAAI,GAAG,CAAC4M,gBAAgB,CAAC9L,KAAlB,GAA0B0B,OAAO,CAACvC,KAAzC;AACD,GAFD,MAEO;AACLD,IAAAA,IAAI,GAAGwC,OAAO,CAACxC,IAAf;AACD;;AACD,MAAI2M,eAAe,IAAII,gBAAvB,EAAyC;AACvC5M,IAAAA,MAAM,CAAC4M,gBAAD,CAAN,GAA2B,iBAAiB/M,IAAjB,GAAwB,MAAxB,GAAiCF,GAAjC,GAAuC,QAAlE;AACAK,IAAAA,MAAM,CAACE,KAAD,CAAN,GAAgB,CAAhB;AACAF,IAAAA,MAAM,CAACG,KAAD,CAAN,GAAgB,CAAhB;AACAH,IAAAA,MAAM,CAACmK,UAAP,GAAoB,WAApB;AACD,GALD,MAKO;AACL;AACA,QAAI0C,SAAS,GAAG3M,KAAK,KAAK,QAAV,GAAqB,CAAC,CAAtB,GAA0B,CAA1C;AACA,QAAI4M,UAAU,GAAG3M,KAAK,KAAK,OAAV,GAAoB,CAAC,CAArB,GAAyB,CAA1C;AACAH,IAAAA,MAAM,CAACE,KAAD,CAAN,GAAgBP,GAAG,GAAGkN,SAAtB;AACA7M,IAAAA,MAAM,CAACG,KAAD,CAAN,GAAgBN,IAAI,GAAGiN,UAAvB;AACA9M,IAAAA,MAAM,CAACmK,UAAP,GAAoBjK,KAAK,GAAG,IAAR,GAAeC,KAAnC;AACD,GA1EkC,CA4EnC;;;AACA,MAAIwI,UAAU,GAAG;AACf,mBAAeX,IAAI,CAAC/C;AADL,GAAjB,CA7EmC,CAiFnC;;AACA+C,EAAAA,IAAI,CAACW,UAAL,GAAkB3G,QAAQ,CAAC,EAAD,EAAK2G,UAAL,EAAiBX,IAAI,CAACW,UAAtB,CAA1B;AACAX,EAAAA,IAAI,CAAChI,MAAL,GAAcgC,QAAQ,CAAC,EAAD,EAAKhC,MAAL,EAAagI,IAAI,CAAChI,MAAlB,CAAtB;AACAgI,EAAAA,IAAI,CAACU,WAAL,GAAmB1G,QAAQ,CAAC,EAAD,EAAKgG,IAAI,CAAC3F,OAAL,CAAa0K,KAAlB,EAAyB/E,IAAI,CAACU,WAA9B,CAA3B;AAEA,SAAOV,IAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASgF,kBAAT,CAA4BjF,SAA5B,EAAuCkF,cAAvC,EAAuDC,aAAvD,EAAsE;AACpE,MAAIC,UAAU,GAAG7F,IAAI,CAACS,SAAD,EAAY,UAAUhD,IAAV,EAAgB;AAC/C,QAAIyE,IAAI,GAAGzE,IAAI,CAACyE,IAAhB;AACA,WAAOA,IAAI,KAAKyD,cAAhB;AACD,GAHoB,CAArB;AAKA,MAAIG,UAAU,GAAG,CAAC,CAACD,UAAF,IAAgBpF,SAAS,CAACwB,IAAV,CAAe,UAAU7J,QAAV,EAAoB;AAClE,WAAOA,QAAQ,CAAC8J,IAAT,KAAkB0D,aAAlB,IAAmCxN,QAAQ,CAAC6I,OAA5C,IAAuD7I,QAAQ,CAACzB,KAAT,GAAiBkP,UAAU,CAAClP,KAA1F;AACD,GAFgC,CAAjC;;AAIA,MAAI,CAACmP,UAAL,EAAiB;AACf,QAAIC,WAAW,GAAG,MAAMJ,cAAN,GAAuB,GAAzC;;AACA,QAAIK,SAAS,GAAG,MAAMJ,aAAN,GAAsB,GAAtC;AACA7E,IAAAA,OAAO,CAACC,IAAR,CAAagF,SAAS,GAAG,2BAAZ,GAA0CD,WAA1C,GAAwD,2DAAxD,GAAsHA,WAAtH,GAAoI,GAAjJ;AACD;;AACD,SAAOD,UAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASL,KAAT,CAAe/E,IAAf,EAAqBa,OAArB,EAA8B;AAC5B,MAAI0E,mBAAJ,CAD4B,CAG5B;;;AACA,MAAI,CAACP,kBAAkB,CAAChF,IAAI,CAACnH,QAAL,CAAckH,SAAf,EAA0B,OAA1B,EAAmC,cAAnC,CAAvB,EAA2E;AACzE,WAAOC,IAAP;AACD;;AAED,MAAImE,YAAY,GAAGtD,OAAO,CAAC/M,OAA3B,CAR4B,CAU5B;;AACA,MAAI,OAAOqQ,YAAP,KAAwB,QAA5B,EAAsC;AACpCA,IAAAA,YAAY,GAAGnE,IAAI,CAACnH,QAAL,CAAc0D,MAAd,CAAqBiJ,aAArB,CAAmCrB,YAAnC,CAAf,CADoC,CAGpC;;AACA,QAAI,CAACA,YAAL,EAAmB;AACjB,aAAOnE,IAAP;AACD;AACF,GAPD,MAOO;AACL;AACA;AACA,QAAI,CAACA,IAAI,CAACnH,QAAL,CAAc0D,MAAd,CAAqB3F,QAArB,CAA8BuN,YAA9B,CAAL,EAAkD;AAChD9D,MAAAA,OAAO,CAACC,IAAR,CAAa,+DAAb;AACA,aAAON,IAAP;AACD;AACF;;AAED,MAAI/C,SAAS,GAAG+C,IAAI,CAAC/C,SAAL,CAAee,KAAf,CAAqB,GAArB,EAA0B,CAA1B,CAAhB;AACA,MAAIyH,aAAa,GAAGzF,IAAI,CAAC3F,OAAzB;AAAA,MACIkC,MAAM,GAAGkJ,aAAa,CAAClJ,MAD3B;AAAA,MAEIC,SAAS,GAAGiJ,aAAa,CAACjJ,SAF9B;AAIA,MAAIkJ,UAAU,GAAG,CAAC,MAAD,EAAS,OAAT,EAAkB9S,OAAlB,CAA0BqK,SAA1B,MAAyC,CAAC,CAA3D;AAEA,MAAI0I,GAAG,GAAGD,UAAU,GAAG,QAAH,GAAc,OAAlC;AACA,MAAIE,eAAe,GAAGF,UAAU,GAAG,KAAH,GAAW,MAA3C;AACA,MAAI3O,IAAI,GAAG6O,eAAe,CAACC,WAAhB,EAAX;AACA,MAAIC,OAAO,GAAGJ,UAAU,GAAG,MAAH,GAAY,KAApC;AACA,MAAIK,MAAM,GAAGL,UAAU,GAAG,QAAH,GAAc,OAArC;AACA,MAAIM,gBAAgB,GAAG5H,aAAa,CAAC+F,YAAD,CAAb,CAA4BwB,GAA5B,CAAvB,CAvC4B,CAyC5B;AACA;AACA;AACA;AAEA;;AACA,MAAInJ,SAAS,CAACuJ,MAAD,CAAT,GAAoBC,gBAApB,GAAuCzJ,MAAM,CAACxF,IAAD,CAAjD,EAAyD;AACvDiJ,IAAAA,IAAI,CAAC3F,OAAL,CAAakC,MAAb,CAAoBxF,IAApB,KAA6BwF,MAAM,CAACxF,IAAD,CAAN,IAAgByF,SAAS,CAACuJ,MAAD,CAAT,GAAoBC,gBAApC,CAA7B;AACD,GAjD2B,CAkD5B;;;AACA,MAAIxJ,SAAS,CAACzF,IAAD,CAAT,GAAkBiP,gBAAlB,GAAqCzJ,MAAM,CAACwJ,MAAD,CAA/C,EAAyD;AACvD/F,IAAAA,IAAI,CAAC3F,OAAL,CAAakC,MAAb,CAAoBxF,IAApB,KAA6ByF,SAAS,CAACzF,IAAD,CAAT,GAAkBiP,gBAAlB,GAAqCzJ,MAAM,CAACwJ,MAAD,CAAxE;AACD;;AACD/F,EAAAA,IAAI,CAAC3F,OAAL,CAAakC,MAAb,GAAsBnC,aAAa,CAAC4F,IAAI,CAAC3F,OAAL,CAAakC,MAAd,CAAnC,CAtD4B,CAwD5B;;AACA,MAAI0J,MAAM,GAAGzJ,SAAS,CAACzF,IAAD,CAAT,GAAkByF,SAAS,CAACmJ,GAAD,CAAT,GAAiB,CAAnC,GAAuCK,gBAAgB,GAAG,CAAvE,CAzD4B,CA2D5B;AACA;;AACA,MAAI/R,GAAG,GAAGJ,wBAAwB,CAACmM,IAAI,CAACnH,QAAL,CAAc0D,MAAf,CAAlC;AACA,MAAI2J,gBAAgB,GAAG9N,UAAU,CAACnE,GAAG,CAAC,WAAW2R,eAAZ,CAAJ,EAAkC,EAAlC,CAAjC;AACA,MAAIO,gBAAgB,GAAG/N,UAAU,CAACnE,GAAG,CAAC,WAAW2R,eAAX,GAA6B,OAA9B,CAAJ,EAA4C,EAA5C,CAAjC;AACA,MAAIQ,SAAS,GAAGH,MAAM,GAAGjG,IAAI,CAAC3F,OAAL,CAAakC,MAAb,CAAoBxF,IAApB,CAAT,GAAqCmP,gBAArC,GAAwDC,gBAAxE,CAhE4B,CAkE5B;;AACAC,EAAAA,SAAS,GAAG7N,IAAI,CAACC,GAAL,CAASD,IAAI,CAAC8N,GAAL,CAAS9J,MAAM,CAACoJ,GAAD,CAAN,GAAcK,gBAAvB,EAAyCI,SAAzC,CAAT,EAA8D,CAA9D,CAAZ;AAEApG,EAAAA,IAAI,CAACmE,YAAL,GAAoBA,YAApB;AACAnE,EAAAA,IAAI,CAAC3F,OAAL,CAAa0K,KAAb,IAAsBQ,mBAAmB,GAAG,EAAtB,EAA0B9L,cAAc,CAAC8L,mBAAD,EAAsBxO,IAAtB,EAA4BwB,IAAI,CAACoM,KAAL,CAAWyB,SAAX,CAA5B,CAAxC,EAA4F3M,cAAc,CAAC8L,mBAAD,EAAsBO,OAAtB,EAA+B,EAA/B,CAA1G,EAA8IP,mBAApK;AAEA,SAAOvF,IAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASsG,oBAAT,CAA8BvI,SAA9B,EAAyC;AACvC,MAAIA,SAAS,KAAK,KAAlB,EAAyB;AACvB,WAAO,OAAP;AACD,GAFD,MAEO,IAAIA,SAAS,KAAK,OAAlB,EAA2B;AAChC,WAAO,KAAP;AACD;;AACD,SAAOA,SAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIwI,UAAU,GAAG,CAAC,YAAD,EAAe,MAAf,EAAuB,UAAvB,EAAmC,WAAnC,EAAgD,KAAhD,EAAuD,SAAvD,EAAkE,aAAlE,EAAiF,OAAjF,EAA0F,WAA1F,EAAuG,YAAvG,EAAqH,QAArH,EAA+H,cAA/H,EAA+I,UAA/I,EAA2J,MAA3J,EAAmK,YAAnK,CAAjB,C,CAEA;;AACA,IAAIC,eAAe,GAAGD,UAAU,CAACpG,KAAX,CAAiB,CAAjB,CAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASsG,SAAT,CAAmBxJ,SAAnB,EAA8B;AAC5B,MAAIyJ,OAAO,GAAG1P,SAAS,CAACvE,MAAV,GAAmB,CAAnB,IAAwBuE,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAAzC,GAAqDD,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAAlF;AAEA,MAAI2P,KAAK,GAAGH,eAAe,CAAC5T,OAAhB,CAAwBqK,SAAxB,CAAZ;AACA,MAAIsC,GAAG,GAAGiH,eAAe,CAACrG,KAAhB,CAAsBwG,KAAK,GAAG,CAA9B,EAAiCC,MAAjC,CAAwCJ,eAAe,CAACrG,KAAhB,CAAsB,CAAtB,EAAyBwG,KAAzB,CAAxC,CAAV;AACA,SAAOD,OAAO,GAAGnH,GAAG,CAACsH,OAAJ,EAAH,GAAmBtH,GAAjC;AACD;;AAED,IAAIuH,SAAS,GAAG;AACdC,EAAAA,IAAI,EAAE,MADQ;AAEdC,EAAAA,SAAS,EAAE,WAFG;AAGdC,EAAAA,gBAAgB,EAAE;AAHJ,CAAhB;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASlG,IAAT,CAAcf,IAAd,EAAoBa,OAApB,EAA6B;AAC3B;AACA,MAAIQ,iBAAiB,CAACrB,IAAI,CAACnH,QAAL,CAAckH,SAAf,EAA0B,OAA1B,CAArB,EAAyD;AACvD,WAAOC,IAAP;AACD;;AAED,MAAIA,IAAI,CAACY,OAAL,IAAgBZ,IAAI,CAAC/C,SAAL,KAAmB+C,IAAI,CAACgB,iBAA5C,EAA+D;AAC7D;AACA,WAAOhB,IAAP;AACD;;AAED,MAAIrD,UAAU,GAAGL,aAAa,CAAC0D,IAAI,CAACnH,QAAL,CAAc0D,MAAf,EAAuByD,IAAI,CAACnH,QAAL,CAAc2D,SAArC,EAAgDqE,OAAO,CAACpE,OAAxD,EAAiEoE,OAAO,CAACnE,iBAAzE,EAA4FsD,IAAI,CAACc,aAAjG,CAA9B;AAEA,MAAI7D,SAAS,GAAG+C,IAAI,CAAC/C,SAAL,CAAee,KAAf,CAAqB,GAArB,EAA0B,CAA1B,CAAhB;AACA,MAAIkJ,iBAAiB,GAAGzI,oBAAoB,CAACxB,SAAD,CAA5C;AACA,MAAIc,SAAS,GAAGiC,IAAI,CAAC/C,SAAL,CAAee,KAAf,CAAqB,GAArB,EAA0B,CAA1B,KAAgC,EAAhD;AAEA,MAAImJ,SAAS,GAAG,EAAhB;;AAEA,UAAQtG,OAAO,CAACuG,QAAhB;AACE,SAAKN,SAAS,CAACC,IAAf;AACEI,MAAAA,SAAS,GAAG,CAAClK,SAAD,EAAYiK,iBAAZ,CAAZ;AACA;;AACF,SAAKJ,SAAS,CAACE,SAAf;AACEG,MAAAA,SAAS,GAAGV,SAAS,CAACxJ,SAAD,CAArB;AACA;;AACF,SAAK6J,SAAS,CAACG,gBAAf;AACEE,MAAAA,SAAS,GAAGV,SAAS,CAACxJ,SAAD,EAAY,IAAZ,CAArB;AACA;;AACF;AACEkK,MAAAA,SAAS,GAAGtG,OAAO,CAACuG,QAApB;AAXJ;;AAcAD,EAAAA,SAAS,CAAC/G,OAAV,CAAkB,UAAUiH,IAAV,EAAgBV,KAAhB,EAAuB;AACvC,QAAI1J,SAAS,KAAKoK,IAAd,IAAsBF,SAAS,CAAC1U,MAAV,KAAqBkU,KAAK,GAAG,CAAvD,EAA0D;AACxD,aAAO3G,IAAP;AACD;;AAED/C,IAAAA,SAAS,GAAG+C,IAAI,CAAC/C,SAAL,CAAee,KAAf,CAAqB,GAArB,EAA0B,CAA1B,CAAZ;AACAkJ,IAAAA,iBAAiB,GAAGzI,oBAAoB,CAACxB,SAAD,CAAxC;AAEA,QAAI+B,aAAa,GAAGgB,IAAI,CAAC3F,OAAL,CAAakC,MAAjC;AACA,QAAI+K,UAAU,GAAGtH,IAAI,CAAC3F,OAAL,CAAamC,SAA9B,CATuC,CAWvC;;AACA,QAAIkI,KAAK,GAAGnM,IAAI,CAACmM,KAAjB;AACA,QAAI6C,WAAW,GAAGtK,SAAS,KAAK,MAAd,IAAwByH,KAAK,CAAC1F,aAAa,CAAClH,KAAf,CAAL,GAA6B4M,KAAK,CAAC4C,UAAU,CAACzP,IAAZ,CAA1D,IAA+EoF,SAAS,KAAK,OAAd,IAAyByH,KAAK,CAAC1F,aAAa,CAACnH,IAAf,CAAL,GAA4B6M,KAAK,CAAC4C,UAAU,CAACxP,KAAZ,CAAzI,IAA+JmF,SAAS,KAAK,KAAd,IAAuByH,KAAK,CAAC1F,aAAa,CAACpH,MAAf,CAAL,GAA8B8M,KAAK,CAAC4C,UAAU,CAAC3P,GAAZ,CAAzN,IAA6OsF,SAAS,KAAK,QAAd,IAA0ByH,KAAK,CAAC1F,aAAa,CAACrH,GAAf,CAAL,GAA2B+M,KAAK,CAAC4C,UAAU,CAAC1P,MAAZ,CAAzT;AAEA,QAAI4P,aAAa,GAAG9C,KAAK,CAAC1F,aAAa,CAACnH,IAAf,CAAL,GAA4B6M,KAAK,CAAC/H,UAAU,CAAC9E,IAAZ,CAArD;AACA,QAAI4P,cAAc,GAAG/C,KAAK,CAAC1F,aAAa,CAAClH,KAAf,CAAL,GAA6B4M,KAAK,CAAC/H,UAAU,CAAC7E,KAAZ,CAAvD;AACA,QAAI4P,YAAY,GAAGhD,KAAK,CAAC1F,aAAa,CAACrH,GAAf,CAAL,GAA2B+M,KAAK,CAAC/H,UAAU,CAAChF,GAAZ,CAAnD;AACA,QAAIgQ,eAAe,GAAGjD,KAAK,CAAC1F,aAAa,CAACpH,MAAf,CAAL,GAA8B8M,KAAK,CAAC/H,UAAU,CAAC/E,MAAZ,CAAzD;AAEA,QAAIgQ,mBAAmB,GAAG3K,SAAS,KAAK,MAAd,IAAwBuK,aAAxB,IAAyCvK,SAAS,KAAK,OAAd,IAAyBwK,cAAlE,IAAoFxK,SAAS,KAAK,KAAd,IAAuByK,YAA3G,IAA2HzK,SAAS,KAAK,QAAd,IAA0B0K,eAA/K,CApBuC,CAsBvC;;AACA,QAAIjC,UAAU,GAAG,CAAC,KAAD,EAAQ,QAAR,EAAkB9S,OAAlB,CAA0BqK,SAA1B,MAAyC,CAAC,CAA3D;AACA,QAAI4K,gBAAgB,GAAG,CAAC,CAAChH,OAAO,CAACiH,cAAV,KAA6BpC,UAAU,IAAI3H,SAAS,KAAK,OAA5B,IAAuCyJ,aAAvC,IAAwD9B,UAAU,IAAI3H,SAAS,KAAK,KAA5B,IAAqC0J,cAA7F,IAA+G,CAAC/B,UAAD,IAAe3H,SAAS,KAAK,OAA7B,IAAwC2J,YAAvJ,IAAuK,CAAChC,UAAD,IAAe3H,SAAS,KAAK,KAA7B,IAAsC4J,eAA1O,CAAvB;;AAEA,QAAIJ,WAAW,IAAIK,mBAAf,IAAsCC,gBAA1C,EAA4D;AAC1D;AACA7H,MAAAA,IAAI,CAACY,OAAL,GAAe,IAAf;;AAEA,UAAI2G,WAAW,IAAIK,mBAAnB,EAAwC;AACtC3K,QAAAA,SAAS,GAAGkK,SAAS,CAACR,KAAK,GAAG,CAAT,CAArB;AACD;;AAED,UAAIkB,gBAAJ,EAAsB;AACpB9J,QAAAA,SAAS,GAAGuI,oBAAoB,CAACvI,SAAD,CAAhC;AACD;;AAEDiC,MAAAA,IAAI,CAAC/C,SAAL,GAAiBA,SAAS,IAAIc,SAAS,GAAG,MAAMA,SAAT,GAAqB,EAAlC,CAA1B,CAZ0D,CAc1D;AACA;;AACAiC,MAAAA,IAAI,CAAC3F,OAAL,CAAakC,MAAb,GAAsBvC,QAAQ,CAAC,EAAD,EAAKgG,IAAI,CAAC3F,OAAL,CAAakC,MAAlB,EAA0BsC,gBAAgB,CAACmB,IAAI,CAACnH,QAAL,CAAc0D,MAAf,EAAuByD,IAAI,CAAC3F,OAAL,CAAamC,SAApC,EAA+CwD,IAAI,CAAC/C,SAApD,CAA1C,CAA9B;AAEA+C,MAAAA,IAAI,GAAGF,YAAY,CAACE,IAAI,CAACnH,QAAL,CAAckH,SAAf,EAA0BC,IAA1B,EAAgC,MAAhC,CAAnB;AACD;AACF,GA9CD;AA+CA,SAAOA,IAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS+H,YAAT,CAAsB/H,IAAtB,EAA4B;AAC1B,MAAIyF,aAAa,GAAGzF,IAAI,CAAC3F,OAAzB;AAAA,MACIkC,MAAM,GAAGkJ,aAAa,CAAClJ,MAD3B;AAAA,MAEIC,SAAS,GAAGiJ,aAAa,CAACjJ,SAF9B;AAIA,MAAIS,SAAS,GAAG+C,IAAI,CAAC/C,SAAL,CAAee,KAAf,CAAqB,GAArB,EAA0B,CAA1B,CAAhB;AACA,MAAI0G,KAAK,GAAGnM,IAAI,CAACmM,KAAjB;AACA,MAAIgB,UAAU,GAAG,CAAC,KAAD,EAAQ,QAAR,EAAkB9S,OAAlB,CAA0BqK,SAA1B,MAAyC,CAAC,CAA3D;AACA,MAAIlG,IAAI,GAAG2O,UAAU,GAAG,OAAH,GAAa,QAAlC;AACA,MAAIK,MAAM,GAAGL,UAAU,GAAG,MAAH,GAAY,KAAnC;AACA,MAAItG,WAAW,GAAGsG,UAAU,GAAG,OAAH,GAAa,QAAzC;;AAEA,MAAInJ,MAAM,CAACxF,IAAD,CAAN,GAAe2N,KAAK,CAAClI,SAAS,CAACuJ,MAAD,CAAV,CAAxB,EAA6C;AAC3C/F,IAAAA,IAAI,CAAC3F,OAAL,CAAakC,MAAb,CAAoBwJ,MAApB,IAA8BrB,KAAK,CAAClI,SAAS,CAACuJ,MAAD,CAAV,CAAL,GAA2BxJ,MAAM,CAAC6C,WAAD,CAA/D;AACD;;AACD,MAAI7C,MAAM,CAACwJ,MAAD,CAAN,GAAiBrB,KAAK,CAAClI,SAAS,CAACzF,IAAD,CAAV,CAA1B,EAA6C;AAC3CiJ,IAAAA,IAAI,CAAC3F,OAAL,CAAakC,MAAb,CAAoBwJ,MAApB,IAA8BrB,KAAK,CAAClI,SAAS,CAACzF,IAAD,CAAV,CAAnC;AACD;;AAED,SAAOiJ,IAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASgI,OAAT,CAAiBC,GAAjB,EAAsB7I,WAAtB,EAAmCJ,aAAnC,EAAkDF,gBAAlD,EAAoE;AAClE;AACA,MAAId,KAAK,GAAGiK,GAAG,CAACpI,KAAJ,CAAU,2BAAV,CAAZ;AACA,MAAI9F,KAAK,GAAG,CAACiE,KAAK,CAAC,CAAD,CAAlB;AACA,MAAI+F,IAAI,GAAG/F,KAAK,CAAC,CAAD,CAAhB,CAJkE,CAMlE;;AACA,MAAI,CAACjE,KAAL,EAAY;AACV,WAAOkO,GAAP;AACD;;AAED,MAAIlE,IAAI,CAACnR,OAAL,CAAa,GAAb,MAAsB,CAA1B,EAA6B;AAC3B,QAAIkB,OAAO,GAAG,KAAK,CAAnB;;AACA,YAAQiQ,IAAR;AACE,WAAK,IAAL;AACEjQ,QAAAA,OAAO,GAAGkL,aAAV;AACA;;AACF,WAAK,GAAL;AACA,WAAK,IAAL;AACA;AACElL,QAAAA,OAAO,GAAGgL,gBAAV;AAPJ;;AAUA,QAAIxH,IAAI,GAAG8C,aAAa,CAACtG,OAAD,CAAxB;AACA,WAAOwD,IAAI,CAAC8H,WAAD,CAAJ,GAAoB,GAApB,GAA0BrF,KAAjC;AACD,GAdD,MAcO,IAAIgK,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,IAA9B,EAAoC;AACzC;AACA,QAAImE,IAAI,GAAG,KAAK,CAAhB;;AACA,QAAInE,IAAI,KAAK,IAAb,EAAmB;AACjBmE,MAAAA,IAAI,GAAG3P,IAAI,CAACC,GAAL,CAASnG,QAAQ,CAACiD,eAAT,CAAyBqF,YAAlC,EAAgDvI,MAAM,CAAC4J,WAAP,IAAsB,CAAtE,CAAP;AACD,KAFD,MAEO;AACLkM,MAAAA,IAAI,GAAG3P,IAAI,CAACC,GAAL,CAASnG,QAAQ,CAACiD,eAAT,CAAyBoF,WAAlC,EAA+CtI,MAAM,CAAC2J,UAAP,IAAqB,CAApE,CAAP;AACD;;AACD,WAAOmM,IAAI,GAAG,GAAP,GAAanO,KAApB;AACD,GATM,MASA;AACL;AACA;AACA,WAAOA,KAAP;AACD;AACF;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASoO,WAAT,CAAqBlM,MAArB,EAA6B+C,aAA7B,EAA4CF,gBAA5C,EAA8DsJ,aAA9D,EAA6E;AAC3E,MAAI/N,OAAO,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAd,CAD2E,CAG3E;AACA;AACA;;AACA,MAAIgO,SAAS,GAAG,CAAC,OAAD,EAAU,MAAV,EAAkBzV,OAAlB,CAA0BwV,aAA1B,MAA6C,CAAC,CAA9D,CAN2E,CAQ3E;AACA;;AACA,MAAIE,SAAS,GAAGrM,MAAM,CAAC+B,KAAP,CAAa,SAAb,EAAwBV,GAAxB,CAA4B,UAAUiL,IAAV,EAAgB;AAC1D,WAAOA,IAAI,CAACC,IAAL,EAAP;AACD,GAFe,CAAhB,CAV2E,CAc3E;AACA;;AACA,MAAIC,OAAO,GAAGH,SAAS,CAAC1V,OAAV,CAAkB0M,IAAI,CAACgJ,SAAD,EAAY,UAAUC,IAAV,EAAgB;AAC9D,WAAOA,IAAI,CAACG,MAAL,CAAY,MAAZ,MAAwB,CAAC,CAAhC;AACD,GAFmC,CAAtB,CAAd;;AAIA,MAAIJ,SAAS,CAACG,OAAD,CAAT,IAAsBH,SAAS,CAACG,OAAD,CAAT,CAAmB7V,OAAnB,CAA2B,GAA3B,MAAoC,CAAC,CAA/D,EAAkE;AAChEyN,IAAAA,OAAO,CAACC,IAAR,CAAa,8EAAb;AACD,GAtB0E,CAwB3E;AACA;;;AACA,MAAIqI,UAAU,GAAG,aAAjB;AACA,MAAIC,GAAG,GAAGH,OAAO,KAAK,CAAC,CAAb,GAAiB,CAACH,SAAS,CAACnI,KAAV,CAAgB,CAAhB,EAAmBsI,OAAnB,EAA4B7B,MAA5B,CAAmC,CAAC0B,SAAS,CAACG,OAAD,CAAT,CAAmBzK,KAAnB,CAAyB2K,UAAzB,EAAqC,CAArC,CAAD,CAAnC,CAAD,EAAgF,CAACL,SAAS,CAACG,OAAD,CAAT,CAAmBzK,KAAnB,CAAyB2K,UAAzB,EAAqC,CAArC,CAAD,EAA0C/B,MAA1C,CAAiD0B,SAAS,CAACnI,KAAV,CAAgBsI,OAAO,GAAG,CAA1B,CAAjD,CAAhF,CAAjB,GAAmL,CAACH,SAAD,CAA7L,CA3B2E,CA6B3E;;AACAM,EAAAA,GAAG,GAAGA,GAAG,CAACtL,GAAJ,CAAQ,UAAUuL,EAAV,EAAclC,KAAd,EAAqB;AACjC;AACA,QAAIvH,WAAW,GAAG,CAACuH,KAAK,KAAK,CAAV,GAAc,CAAC0B,SAAf,GAA2BA,SAA5B,IAAyC,QAAzC,GAAoD,OAAtE;AACA,QAAIS,iBAAiB,GAAG,KAAxB;AACA,WAAOD,EAAE,CACT;AACA;AAFS,KAGRE,MAHM,CAGC,UAAUtL,CAAV,EAAaC,CAAb,EAAgB;AACtB,UAAID,CAAC,CAACA,CAAC,CAAChL,MAAF,GAAW,CAAZ,CAAD,KAAoB,EAApB,IAA0B,CAAC,GAAD,EAAM,GAAN,EAAWG,OAAX,CAAmB8K,CAAnB,MAA0B,CAAC,CAAzD,EAA4D;AAC1DD,QAAAA,CAAC,CAACA,CAAC,CAAChL,MAAF,GAAW,CAAZ,CAAD,GAAkBiL,CAAlB;AACAoL,QAAAA,iBAAiB,GAAG,IAApB;AACA,eAAOrL,CAAP;AACD,OAJD,MAIO,IAAIqL,iBAAJ,EAAuB;AAC5BrL,QAAAA,CAAC,CAACA,CAAC,CAAChL,MAAF,GAAW,CAAZ,CAAD,IAAmBiL,CAAnB;AACAoL,QAAAA,iBAAiB,GAAG,KAApB;AACA,eAAOrL,CAAP;AACD,OAJM,MAIA;AACL,eAAOA,CAAC,CAACmJ,MAAF,CAASlJ,CAAT,CAAP;AACD;AACF,KAfM,EAeJ,EAfI,EAgBP;AAhBO,KAiBNJ,GAjBM,CAiBF,UAAU2K,GAAV,EAAe;AAClB,aAAOD,OAAO,CAACC,GAAD,EAAM7I,WAAN,EAAmBJ,aAAnB,EAAkCF,gBAAlC,CAAd;AACD,KAnBM,CAAP;AAoBD,GAxBK,CAAN,CA9B2E,CAwD3E;;AACA8J,EAAAA,GAAG,CAACxI,OAAJ,CAAY,UAAUyI,EAAV,EAAclC,KAAd,EAAqB;AAC/BkC,IAAAA,EAAE,CAACzI,OAAH,CAAW,UAAUmI,IAAV,EAAgBS,MAAhB,EAAwB;AACjC,UAAItF,SAAS,CAAC6E,IAAD,CAAb,EAAqB;AACnBlO,QAAAA,OAAO,CAACsM,KAAD,CAAP,IAAkB4B,IAAI,IAAIM,EAAE,CAACG,MAAM,GAAG,CAAV,CAAF,KAAmB,GAAnB,GAAyB,CAAC,CAA1B,GAA8B,CAAlC,CAAtB;AACD;AACF,KAJD;AAKD,GAND;AAOA,SAAO3O,OAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS4B,MAAT,CAAgB+D,IAAhB,EAAsBjD,IAAtB,EAA4B;AAC1B,MAAId,MAAM,GAAGc,IAAI,CAACd,MAAlB;AACA,MAAIgB,SAAS,GAAG+C,IAAI,CAAC/C,SAArB;AAAA,MACIwI,aAAa,GAAGzF,IAAI,CAAC3F,OADzB;AAAA,MAEIkC,MAAM,GAAGkJ,aAAa,CAAClJ,MAF3B;AAAA,MAGIC,SAAS,GAAGiJ,aAAa,CAACjJ,SAH9B;AAKA,MAAI4L,aAAa,GAAGnL,SAAS,CAACe,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAApB;AAEA,MAAI3D,OAAO,GAAG,KAAK,CAAnB;;AACA,MAAIqJ,SAAS,CAAC,CAACzH,MAAF,CAAb,EAAwB;AACtB5B,IAAAA,OAAO,GAAG,CAAC,CAAC4B,MAAF,EAAU,CAAV,CAAV;AACD,GAFD,MAEO;AACL5B,IAAAA,OAAO,GAAG8N,WAAW,CAAClM,MAAD,EAASM,MAAT,EAAiBC,SAAjB,EAA4B4L,aAA5B,CAArB;AACD;;AAED,MAAIA,aAAa,KAAK,MAAtB,EAA8B;AAC5B7L,IAAAA,MAAM,CAAC5E,GAAP,IAAc0C,OAAO,CAAC,CAAD,CAArB;AACAkC,IAAAA,MAAM,CAAC1E,IAAP,IAAewC,OAAO,CAAC,CAAD,CAAtB;AACD,GAHD,MAGO,IAAI+N,aAAa,KAAK,OAAtB,EAA+B;AACpC7L,IAAAA,MAAM,CAAC5E,GAAP,IAAc0C,OAAO,CAAC,CAAD,CAArB;AACAkC,IAAAA,MAAM,CAAC1E,IAAP,IAAewC,OAAO,CAAC,CAAD,CAAtB;AACD,GAHM,MAGA,IAAI+N,aAAa,KAAK,KAAtB,EAA6B;AAClC7L,IAAAA,MAAM,CAAC1E,IAAP,IAAewC,OAAO,CAAC,CAAD,CAAtB;AACAkC,IAAAA,MAAM,CAAC5E,GAAP,IAAc0C,OAAO,CAAC,CAAD,CAArB;AACD,GAHM,MAGA,IAAI+N,aAAa,KAAK,QAAtB,EAAgC;AACrC7L,IAAAA,MAAM,CAAC1E,IAAP,IAAewC,OAAO,CAAC,CAAD,CAAtB;AACAkC,IAAAA,MAAM,CAAC5E,GAAP,IAAc0C,OAAO,CAAC,CAAD,CAArB;AACD;;AAED2F,EAAAA,IAAI,CAACzD,MAAL,GAAcA,MAAd;AACA,SAAOyD,IAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASiJ,eAAT,CAAyBjJ,IAAzB,EAA+Ba,OAA/B,EAAwC;AACtC,MAAInE,iBAAiB,GAAGmE,OAAO,CAACnE,iBAAR,IAA6BrH,eAAe,CAAC2K,IAAI,CAACnH,QAAL,CAAc0D,MAAf,CAApE,CADsC,CAGtC;AACA;AACA;;AACA,MAAIyD,IAAI,CAACnH,QAAL,CAAc2D,SAAd,KAA4BE,iBAAhC,EAAmD;AACjDA,IAAAA,iBAAiB,GAAGrH,eAAe,CAACqH,iBAAD,CAAnC;AACD,GARqC,CAUtC;AACA;AACA;;;AACA,MAAIwM,aAAa,GAAGzH,wBAAwB,CAAC,WAAD,CAA5C;AACA,MAAI0H,YAAY,GAAGnJ,IAAI,CAACnH,QAAL,CAAc0D,MAAd,CAAqByF,KAAxC,CAdsC,CAcS;;AAC/C,MAAIrK,GAAG,GAAGwR,YAAY,CAACxR,GAAvB;AAAA,MACIE,IAAI,GAAGsR,YAAY,CAACtR,IADxB;AAAA,MAEIuR,SAAS,GAAGD,YAAY,CAACD,aAAD,CAF5B;AAIAC,EAAAA,YAAY,CAACxR,GAAb,GAAmB,EAAnB;AACAwR,EAAAA,YAAY,CAACtR,IAAb,GAAoB,EAApB;AACAsR,EAAAA,YAAY,CAACD,aAAD,CAAZ,GAA8B,EAA9B;AAEA,MAAIvM,UAAU,GAAGL,aAAa,CAAC0D,IAAI,CAACnH,QAAL,CAAc0D,MAAf,EAAuByD,IAAI,CAACnH,QAAL,CAAc2D,SAArC,EAAgDqE,OAAO,CAACpE,OAAxD,EAAiEC,iBAAjE,EAAoFsD,IAAI,CAACc,aAAzF,CAA9B,CAvBsC,CAyBtC;AACA;;AACAqI,EAAAA,YAAY,CAACxR,GAAb,GAAmBA,GAAnB;AACAwR,EAAAA,YAAY,CAACtR,IAAb,GAAoBA,IAApB;AACAsR,EAAAA,YAAY,CAACD,aAAD,CAAZ,GAA8BE,SAA9B;AAEAvI,EAAAA,OAAO,CAAClE,UAAR,GAAqBA,UAArB;AAEA,MAAI1G,KAAK,GAAG4K,OAAO,CAACwI,QAApB;AACA,MAAI9M,MAAM,GAAGyD,IAAI,CAAC3F,OAAL,CAAakC,MAA1B;AAEA,MAAIiD,KAAK,GAAG;AACV8J,IAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBrM,SAAjB,EAA4B;AACnC,UAAIlD,KAAK,GAAGwC,MAAM,CAACU,SAAD,CAAlB;;AACA,UAAIV,MAAM,CAACU,SAAD,CAAN,GAAoBN,UAAU,CAACM,SAAD,CAA9B,IAA6C,CAAC4D,OAAO,CAAC0I,mBAA1D,EAA+E;AAC7ExP,QAAAA,KAAK,GAAGxB,IAAI,CAACC,GAAL,CAAS+D,MAAM,CAACU,SAAD,CAAf,EAA4BN,UAAU,CAACM,SAAD,CAAtC,CAAR;AACD;;AACD,aAAOxD,cAAc,CAAC,EAAD,EAAKwD,SAAL,EAAgBlD,KAAhB,CAArB;AACD,KAPS;AAQVyP,IAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBvM,SAAnB,EAA8B;AACvC,UAAIiC,QAAQ,GAAGjC,SAAS,KAAK,OAAd,GAAwB,MAAxB,GAAiC,KAAhD;AACA,UAAIlD,KAAK,GAAGwC,MAAM,CAAC2C,QAAD,CAAlB;;AACA,UAAI3C,MAAM,CAACU,SAAD,CAAN,GAAoBN,UAAU,CAACM,SAAD,CAA9B,IAA6C,CAAC4D,OAAO,CAAC0I,mBAA1D,EAA+E;AAC7ExP,QAAAA,KAAK,GAAGxB,IAAI,CAAC8N,GAAL,CAAS9J,MAAM,CAAC2C,QAAD,CAAf,EAA2BvC,UAAU,CAACM,SAAD,CAAV,IAAyBA,SAAS,KAAK,OAAd,GAAwBV,MAAM,CAAC5D,KAA/B,GAAuC4D,MAAM,CAAC7D,MAAvE,CAA3B,CAAR;AACD;;AACD,aAAOe,cAAc,CAAC,EAAD,EAAKyF,QAAL,EAAenF,KAAf,CAArB;AACD;AAfS,GAAZ;AAkBA9D,EAAAA,KAAK,CAACmK,OAAN,CAAc,UAAUnD,SAAV,EAAqB;AACjC,QAAIlG,IAAI,GAAG,CAAC,MAAD,EAAS,KAAT,EAAgBnE,OAAhB,CAAwBqK,SAAxB,MAAuC,CAAC,CAAxC,GAA4C,SAA5C,GAAwD,WAAnE;AACAV,IAAAA,MAAM,GAAGvC,QAAQ,CAAC,EAAD,EAAKuC,MAAL,EAAaiD,KAAK,CAACzI,IAAD,CAAL,CAAYkG,SAAZ,CAAb,CAAjB;AACD,GAHD;AAKA+C,EAAAA,IAAI,CAAC3F,OAAL,CAAakC,MAAb,GAAsBA,MAAtB;AAEA,SAAOyD,IAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASyJ,KAAT,CAAezJ,IAAf,EAAqB;AACnB,MAAI/C,SAAS,GAAG+C,IAAI,CAAC/C,SAArB;AACA,MAAImL,aAAa,GAAGnL,SAAS,CAACe,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAApB;AACA,MAAI0L,cAAc,GAAGzM,SAAS,CAACe,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAArB,CAHmB,CAKnB;;AACA,MAAI0L,cAAJ,EAAoB;AAClB,QAAIjE,aAAa,GAAGzF,IAAI,CAAC3F,OAAzB;AAAA,QACImC,SAAS,GAAGiJ,aAAa,CAACjJ,SAD9B;AAAA,QAEID,MAAM,GAAGkJ,aAAa,CAAClJ,MAF3B;AAIA,QAAImJ,UAAU,GAAG,CAAC,QAAD,EAAW,KAAX,EAAkB9S,OAAlB,CAA0BwV,aAA1B,MAA6C,CAAC,CAA/D;AACA,QAAIrR,IAAI,GAAG2O,UAAU,GAAG,MAAH,GAAY,KAAjC;AACA,QAAItG,WAAW,GAAGsG,UAAU,GAAG,OAAH,GAAa,QAAzC;AAEA,QAAIiE,YAAY,GAAG;AACjBtT,MAAAA,KAAK,EAAEoD,cAAc,CAAC,EAAD,EAAK1C,IAAL,EAAWyF,SAAS,CAACzF,IAAD,CAApB,CADJ;AAEjBT,MAAAA,GAAG,EAAEmD,cAAc,CAAC,EAAD,EAAK1C,IAAL,EAAWyF,SAAS,CAACzF,IAAD,CAAT,GAAkByF,SAAS,CAAC4C,WAAD,CAA3B,GAA2C7C,MAAM,CAAC6C,WAAD,CAA5D;AAFF,KAAnB;AAKAY,IAAAA,IAAI,CAAC3F,OAAL,CAAakC,MAAb,GAAsBvC,QAAQ,CAAC,EAAD,EAAKuC,MAAL,EAAaoN,YAAY,CAACD,cAAD,CAAzB,CAA9B;AACD;;AAED,SAAO1J,IAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS4J,IAAT,CAAc5J,IAAd,EAAoB;AAClB,MAAI,CAACgF,kBAAkB,CAAChF,IAAI,CAACnH,QAAL,CAAckH,SAAf,EAA0B,MAA1B,EAAkC,iBAAlC,CAAvB,EAA6E;AAC3E,WAAOC,IAAP;AACD;;AAED,MAAI9C,OAAO,GAAG8C,IAAI,CAAC3F,OAAL,CAAamC,SAA3B;AACA,MAAIqN,KAAK,GAAGvK,IAAI,CAACU,IAAI,CAACnH,QAAL,CAAckH,SAAf,EAA0B,UAAUrI,QAAV,EAAoB;AAC5D,WAAOA,QAAQ,CAAC8J,IAAT,KAAkB,iBAAzB;AACD,GAFe,CAAJ,CAET7E,UAFH;;AAIA,MAAIO,OAAO,CAACtF,MAAR,GAAiBiS,KAAK,CAAClS,GAAvB,IAA8BuF,OAAO,CAACrF,IAAR,GAAegS,KAAK,CAAC/R,KAAnD,IAA4DoF,OAAO,CAACvF,GAAR,GAAckS,KAAK,CAACjS,MAAhF,IAA0FsF,OAAO,CAACpF,KAAR,GAAgB+R,KAAK,CAAChS,IAApH,EAA0H;AACxH;AACA,QAAImI,IAAI,CAAC4J,IAAL,KAAc,IAAlB,EAAwB;AACtB,aAAO5J,IAAP;AACD;;AAEDA,IAAAA,IAAI,CAAC4J,IAAL,GAAY,IAAZ;AACA5J,IAAAA,IAAI,CAACW,UAAL,CAAgB,qBAAhB,IAAyC,EAAzC;AACD,GARD,MAQO;AACL;AACA,QAAIX,IAAI,CAAC4J,IAAL,KAAc,KAAlB,EAAyB;AACvB,aAAO5J,IAAP;AACD;;AAEDA,IAAAA,IAAI,CAAC4J,IAAL,GAAY,KAAZ;AACA5J,IAAAA,IAAI,CAACW,UAAL,CAAgB,qBAAhB,IAAyC,KAAzC;AACD;;AAED,SAAOX,IAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS8J,KAAT,CAAe9J,IAAf,EAAqB;AACnB,MAAI/C,SAAS,GAAG+C,IAAI,CAAC/C,SAArB;AACA,MAAImL,aAAa,GAAGnL,SAAS,CAACe,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAApB;AACA,MAAIyH,aAAa,GAAGzF,IAAI,CAAC3F,OAAzB;AAAA,MACIkC,MAAM,GAAGkJ,aAAa,CAAClJ,MAD3B;AAAA,MAEIC,SAAS,GAAGiJ,aAAa,CAACjJ,SAF9B;AAIA,MAAIyC,OAAO,GAAG,CAAC,MAAD,EAAS,OAAT,EAAkBrM,OAAlB,CAA0BwV,aAA1B,MAA6C,CAAC,CAA5D;AAEA,MAAI2B,cAAc,GAAG,CAAC,KAAD,EAAQ,MAAR,EAAgBnX,OAAhB,CAAwBwV,aAAxB,MAA2C,CAAC,CAAjE;AAEA7L,EAAAA,MAAM,CAAC0C,OAAO,GAAG,MAAH,GAAY,KAApB,CAAN,GAAmCzC,SAAS,CAAC4L,aAAD,CAAT,IAA4B2B,cAAc,GAAGxN,MAAM,CAAC0C,OAAO,GAAG,OAAH,GAAa,QAArB,CAAT,GAA0C,CAApF,CAAnC;AAEAe,EAAAA,IAAI,CAAC/C,SAAL,GAAiBwB,oBAAoB,CAACxB,SAAD,CAArC;AACA+C,EAAAA,IAAI,CAAC3F,OAAL,CAAakC,MAAb,GAAsBnC,aAAa,CAACmC,MAAD,CAAnC;AAEA,SAAOyD,IAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAID,SAAS,GAAG;AACd;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACE0J,EAAAA,KAAK,EAAE;AACL;AACAxT,IAAAA,KAAK,EAAE,GAFF;;AAGL;AACAsK,IAAAA,OAAO,EAAE,IAJJ;;AAKL;AACAzN,IAAAA,EAAE,EAAE2W;AANC,GATO;;AAkBd;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACExN,EAAAA,MAAM,EAAE;AACN;AACAhG,IAAAA,KAAK,EAAE,GAFD;;AAGN;AACAsK,IAAAA,OAAO,EAAE,IAJH;;AAKN;AACAzN,IAAAA,EAAE,EAAEmJ,MANE;;AAON;AACJ;AACA;AACIA,IAAAA,MAAM,EAAE;AAVF,GAxDM;;AAqEd;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEgN,EAAAA,eAAe,EAAE;AACf;AACAhT,IAAAA,KAAK,EAAE,GAFQ;;AAGf;AACAsK,IAAAA,OAAO,EAAE,IAJM;;AAKf;AACAzN,IAAAA,EAAE,EAAEmW,eANW;;AAOf;AACJ;AACA;AACA;AACA;AACII,IAAAA,QAAQ,EAAE,CAAC,MAAD,EAAS,OAAT,EAAkB,KAAlB,EAAyB,QAAzB,CAZK;;AAaf;AACJ;AACA;AACA;AACA;AACA;AACI5M,IAAAA,OAAO,EAAE,CAnBM;;AAoBf;AACJ;AACA;AACA;AACA;AACIC,IAAAA,iBAAiB,EAAE;AAzBJ,GAtFH;;AAkHd;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEqL,EAAAA,YAAY,EAAE;AACZ;AACA9R,IAAAA,KAAK,EAAE,GAFK;;AAGZ;AACAsK,IAAAA,OAAO,EAAE,IAJG;;AAKZ;AACAzN,IAAAA,EAAE,EAAEiV;AANQ,GA3HA;;AAoId;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEhD,EAAAA,KAAK,EAAE;AACL;AACA9O,IAAAA,KAAK,EAAE,GAFF;;AAGL;AACAsK,IAAAA,OAAO,EAAE,IAJJ;;AAKL;AACAzN,IAAAA,EAAE,EAAEiS,KANC;;AAOL;AACAjR,IAAAA,OAAO,EAAE;AARJ,GA9IO;;AAyJd;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEiN,EAAAA,IAAI,EAAE;AACJ;AACA9K,IAAAA,KAAK,EAAE,GAFH;;AAGJ;AACAsK,IAAAA,OAAO,EAAE,IAJL;;AAKJ;AACAzN,IAAAA,EAAE,EAAEiO,IANA;;AAOJ;AACJ;AACA;AACA;AACA;AACA;AACIqG,IAAAA,QAAQ,EAAE,MAbN;;AAcJ;AACJ;AACA;AACA;AACI3K,IAAAA,OAAO,EAAE,CAlBL;;AAmBJ;AACJ;AACA;AACA;AACA;AACA;AACIC,IAAAA,iBAAiB,EAAE;AAzBf,GApKQ;;AAgMd;AACF;AACA;AACA;AACA;AACA;AACA;AACEoN,EAAAA,KAAK,EAAE;AACL;AACA7T,IAAAA,KAAK,EAAE,GAFF;;AAGL;AACAsK,IAAAA,OAAO,EAAE,KAJJ;;AAKL;AACAzN,IAAAA,EAAE,EAAEgX;AANC,GAvMO;;AAgNd;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEF,EAAAA,IAAI,EAAE;AACJ;AACA3T,IAAAA,KAAK,EAAE,GAFH;;AAGJ;AACAsK,IAAAA,OAAO,EAAE,IAJL;;AAKJ;AACAzN,IAAAA,EAAE,EAAE8W;AANA,GA1NQ;;AAmOd;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEtF,EAAAA,YAAY,EAAE;AACZ;AACArO,IAAAA,KAAK,EAAE,GAFK;;AAGZ;AACAsK,IAAAA,OAAO,EAAE,IAJG;;AAKZ;AACAzN,IAAAA,EAAE,EAAEwR,YANQ;;AAOZ;AACJ;AACA;AACA;AACA;AACIE,IAAAA,eAAe,EAAE,IAZL;;AAaZ;AACJ;AACA;AACA;AACA;AACInG,IAAAA,CAAC,EAAE,QAlBS;;AAmBZ;AACJ;AACA;AACA;AACA;AACIE,IAAAA,CAAC,EAAE;AAxBS,GAlPA;;AA6Qd;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE2F,EAAAA,UAAU,EAAE;AACV;AACAjO,IAAAA,KAAK,EAAE,GAFG;;AAGV;AACAsK,IAAAA,OAAO,EAAE,IAJC;;AAKV;AACAzN,IAAAA,EAAE,EAAEoR,UANM;;AAOV;AACA8F,IAAAA,MAAM,EAAE5F,gBARE;;AASV;AACJ;AACA;AACA;AACA;AACA;AACII,IAAAA,eAAe,EAAEvN;AAfP;AA5RE,CAAhB;AA+SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIgT,QAAQ,GAAG;AACb;AACF;AACA;AACA;AACEhN,EAAAA,SAAS,EAAE,QALE;;AAOb;AACF;AACA;AACA;AACE6D,EAAAA,aAAa,EAAE,KAXF;;AAab;AACF;AACA;AACA;AACEsC,EAAAA,aAAa,EAAE,IAjBF;;AAmBb;AACF;AACA;AACA;AACA;AACEf,EAAAA,eAAe,EAAE,KAxBJ;;AA0Bb;AACF;AACA;AACA;AACA;AACA;AACElB,EAAAA,QAAQ,EAAE,SAASA,QAAT,GAAoB,CAAE,CAhCnB;;AAkCb;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,QAAQ,EAAE,SAAS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","sourcesContent":["/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.14.3\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nvar longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nvar timeoutDuration = 0;\nfor (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nfunction microtaskDebounce(fn) {\n  var called = false;\n  return function () {\n    if (called) {\n      return;\n    }\n    called = true;\n    window.Promise.resolve().then(function () {\n      called = false;\n      fn();\n    });\n  };\n}\n\nfunction taskDebounce(fn) {\n  var scheduled = false;\n  return function () {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(function () {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nvar supportsMicroTasks = isBrowser && window.Promise;\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nvar debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\n\n/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nfunction isFunction(functionToCheck) {\n  var getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n\n/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nfunction getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  var css = getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n\n/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nfunction getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nfunction getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body;\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body;\n    case '#document':\n      return element.body;\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n\n  var _getStyleComputedProp = getStyleComputedProperty(element),\n      overflow = _getStyleComputedProp.overflow,\n      overflowX = _getStyleComputedProp.overflowX,\n      overflowY = _getStyleComputedProp.overflowY;\n\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n\nvar isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nvar isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nfunction isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nfunction getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  var noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  var offsetParent = element.offsetParent;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  var nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (['TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n\nfunction isOffsetContainer(element) {\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n}\n\n/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nfunction getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nfunction findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n  var start = order ? element1 : element2;\n  var end = order ? element2 : element1;\n\n  // Get common ancestor container\n  var range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  var commonAncestorContainer = range.commonAncestorContainer;\n\n  // Both nodes are inside #document\n\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  var element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n\n/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nfunction getScroll(element) {\n  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n\n  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    var html = element.ownerDocument.documentElement;\n    var scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nfunction includeScroll(rect, element) {\n  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var scrollTop = getScroll(element, 'top');\n  var scrollLeft = getScroll(element, 'left');\n  var modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n\n/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nfunction getBordersSize(styles, axis) {\n  var sideA = axis === 'x' ? 'Left' : 'Top';\n  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);\n}\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? html['offset' + axis] + computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')] + computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')] : 0);\n}\n\nfunction getWindowSizes() {\n  var body = document.body;\n  var html = document.documentElement;\n  var computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\nvar defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nfunction getClientRect(offsets) {\n  return _extends({}, offsets, {\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height\n  });\n}\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nfunction getBoundingClientRect(element) {\n  var rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      var scrollTop = getScroll(element, 'top');\n      var scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } else {\n      rect = element.getBoundingClientRect();\n    }\n  } catch (e) {}\n\n  var result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  };\n\n  // subtract scrollbar size from sizes\n  var sizes = element.nodeName === 'HTML' ? getWindowSizes() : {};\n  var width = sizes.width || element.clientWidth || result.right - result.left;\n  var height = sizes.height || element.clientHeight || result.bottom - result.top;\n\n  var horizScrollbar = element.offsetWidth - width;\n  var vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    var styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n\nfunction getOffsetRectRelativeToArbitraryNode(children, parent) {\n  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var isIE10 = isIE(10);\n  var isHTML = parent.nodeName === 'HTML';\n  var childrenRect = getBoundingClientRect(children);\n  var parentRect = getBoundingClientRect(parent);\n  var scrollParent = getScrollParent(children);\n\n  var styles = getStyleComputedProperty(parent);\n  var borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n  var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if (fixedPosition && parent.nodeName === 'HTML') {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  var offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    var marginTop = parseFloat(styles.marginTop, 10);\n    var marginLeft = parseFloat(styles.marginLeft, 10);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var html = element.ownerDocument.documentElement;\n  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  var width = Math.max(html.clientWidth, window.innerWidth || 0);\n  var height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  var scrollTop = !excludeScroll ? getScroll(html) : 0;\n  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  var offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width: width,\n    height: height\n  };\n\n  return getClientRect(offset);\n}\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nfunction isFixed(element) {\n  var nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  return isFixed(getParentNode(element));\n}\n\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nfunction getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  var el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n}\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nfunction getBoundaries(popper, reference, padding, boundariesElement) {\n  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  // NOTE: 1 DOM access here\n\n  var boundaries = { top: 0, left: 0 };\n  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    var boundariesNode = void 0;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      var _getWindowSizes = getWindowSizes(),\n          height = _getWindowSizes.height,\n          width = _getWindowSizes.width;\n\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  boundaries.left += padding;\n  boundaries.top += padding;\n  boundaries.right -= padding;\n  boundaries.bottom -= padding;\n\n  return boundaries;\n}\n\nfunction getArea(_ref) {\n  var width = _ref.width,\n      height = _ref.height;\n\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n\n  var rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height\n    }\n  };\n\n  var sortedAreas = Object.keys(rects).map(function (key) {\n    return _extends({\n      key: key\n    }, rects[key], {\n      area: getArea(rects[key])\n    });\n  }).sort(function (a, b) {\n    return b.area - a.area;\n  });\n\n  var filteredAreas = sortedAreas.filter(function (_ref2) {\n    var width = _ref2.width,\n        height = _ref2.height;\n    return width >= popper.clientWidth && height >= popper.clientHeight;\n  });\n\n  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n\n  var variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? '-' + variation : '');\n}\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nfunction getReferenceOffsets(state, popper, reference) {\n  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n\n/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nfunction getOuterSizes(element) {\n  var styles = getComputedStyle(element);\n  var x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\n  var y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\n  var result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x\n  };\n  return result;\n}\n\n/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nfunction getOppositePlacement(placement) {\n  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  var popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  var popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  var mainSide = isHoriz ? 'top' : 'left';\n  var secondarySide = isHoriz ? 'left' : 'top';\n  var measurement = isHoriz ? 'height' : 'width';\n  var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n\n/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(function (cur) {\n      return cur[prop] === value;\n    });\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  var match = find(arr, function (obj) {\n    return obj[prop] === value;\n  });\n  return arr.indexOf(match);\n}\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nfunction runModifiers(modifiers, data, ends) {\n  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(function (modifier) {\n    if (modifier['function']) {\n      // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nfunction update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  var data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {}\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n\n  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n\n/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nfunction isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(function (_ref) {\n    var name = _ref.name,\n        enabled = _ref.enabled;\n    return enabled && name === modifierName;\n  });\n}\n\n/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nfunction getSupportedPropertyName(property) {\n  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefix = prefixes[i];\n    var toCheck = prefix ? '' + prefix + upperProp : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n\n/**\n * Destroy the popper\n * @method\n * @memberof Popper\n */\nfunction destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicity asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n\n/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nfunction getWindow(element) {\n  var ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  var isBody = scrollParent.nodeName === 'BODY';\n  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction setupEventListeners(reference, options, state, updateBound) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  var scrollElement = getScrollParent(reference);\n  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nfunction enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n  }\n}\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(function (target) {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger onUpdate callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nfunction disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n\n/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nfunction isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setStyles(element, styles) {\n  Object.keys(styles).forEach(function (prop) {\n    var unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n\n/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function (prop) {\n    var value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nfunction applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nfunction applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n  // compute reference element offsets\n  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeStyle(data, options) {\n  var x = options.x,\n      y = options.y;\n  var popper = data.offsets.popper;\n\n  // Remove this legacy support in Popper.js v2\n\n  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'applyStyle';\n  }).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n  }\n  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n\n  var offsetParent = getOffsetParent(data.instance.popper);\n  var offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  var styles = {\n    position: popper.position\n  };\n\n  // Avoid blurry text by using full pixel integers.\n  // For pixel-perfect positioning, top/bottom prefers rounded\n  // values, while left/right prefers floored values.\n  var offsets = {\n    left: Math.floor(popper.left),\n    top: Math.round(popper.top),\n    bottom: Math.round(popper.bottom),\n    right: Math.floor(popper.right)\n  };\n\n  var sideA = x === 'bottom' ? 'top' : 'bottom';\n  var sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  var prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  var left = void 0,\n      top = void 0;\n  if (sideA === 'bottom') {\n    top = -offsetParentRect.height + offsets.bottom;\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    left = -offsetParentRect.width + offsets.right;\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    var invertTop = sideA === 'bottom' ? -1 : 1;\n    var invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = sideA + ', ' + sideB;\n  }\n\n  // Attributes\n  var attributes = {\n    'x-placement': data.placement\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = _extends({}, attributes, data.attributes);\n  data.styles = _extends({}, styles, data.styles);\n  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\n\n  return data;\n}\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\n  var requesting = find(modifiers, function (_ref) {\n    var name = _ref.name;\n    return name === requestingName;\n  });\n\n  var isRequired = !!requesting && modifiers.some(function (modifier) {\n    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n  });\n\n  if (!isRequired) {\n    var _requesting = '`' + requestingName + '`';\n    var requested = '`' + requestedName + '`';\n    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n  }\n  return isRequired;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction arrow(data, options) {\n  var _data$offsets$arrow;\n\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  var arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn('WARNING: `arrow.element` must be child of its popper element!');\n      return data;\n    }\n  }\n\n  var placement = data.placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  var len = isVertical ? 'height' : 'width';\n  var sideCapitalized = isVertical ? 'Top' : 'Left';\n  var side = sideCapitalized.toLowerCase();\n  var altSide = isVertical ? 'left' : 'top';\n  var opSide = isVertical ? 'bottom' : 'right';\n  var arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjuction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  var css = getStyleComputedProperty(data.instance.popper);\n  var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);\n  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);\n  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\n\n  return data;\n}\n\n/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nfunction getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n\n/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-right` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nvar placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\n\n// Get rid of `auto` `auto-start` and `auto-end`\nvar validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nfunction clockwise(placement) {\n  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var index = validPlacements.indexOf(placement);\n  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n\nvar BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise'\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);\n\n  var placement = data.placement.split('-')[0];\n  var placementOpposite = getOppositePlacement(placement);\n  var variation = data.placement.split('-')[1] || '';\n\n  var flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach(function (step, index) {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    var popperOffsets = data.offsets.popper;\n    var refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    var floor = Math.floor;\n    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n\n    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;\n\n    // flip the variation if required\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    var flippedVariation = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction keepTogether(data) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var placement = data.placement.split('-')[0];\n  var floor = Math.floor;\n  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  var side = isVertical ? 'right' : 'bottom';\n  var opSide = isVertical ? 'left' : 'top';\n  var measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nfunction toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  var value = +split[1];\n  var unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    var element = void 0;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    var rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    var size = void 0;\n    if (unit === 'vh') {\n      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    } else {\n      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nfunction parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n  var offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n    return frag.trim();\n  });\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  var divider = fragments.indexOf(find(fragments, function (frag) {\n    return frag.search(/,|\\s/) !== -1;\n  }));\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  var splitRegex = /\\s*,\\s*|\\s+/;\n  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map(function (op, index) {\n    // Most of the units rely on the orientation of the popper\n    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n    var mergeWithPrevious = false;\n    return op\n    // This aggregates any `+` or `-` sign that aren't considered operators\n    // e.g.: 10 + +5 => [10, +, +5]\n    .reduce(function (a, b) {\n      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n        a[a.length - 1] = b;\n        mergeWithPrevious = true;\n        return a;\n      } else if (mergeWithPrevious) {\n        a[a.length - 1] += b;\n        mergeWithPrevious = false;\n        return a;\n      } else {\n        return a.concat(b);\n      }\n    }, [])\n    // Here we convert the string values into number values (in px)\n    .map(function (str) {\n      return toValue(str, measurement, popperOffsets, referenceOffsets);\n    });\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach(function (op, index) {\n    op.forEach(function (frag, index2) {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nfunction offset(data, _ref) {\n  var offset = _ref.offset;\n  var placement = data.placement,\n      _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var basePlacement = placement.split('-')[0];\n\n  var offsets = void 0;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction preventOverflow(data, options) {\n  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  var transformProp = getSupportedPropertyName('transform');\n  var popperStyles = data.instance.popper.style; // assignment to help minification\n  var top = popperStyles.top,\n      left = popperStyles.left,\n      transform = popperStyles[transformProp];\n\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  var order = options.priority;\n  var popper = data.offsets.popper;\n\n  var check = {\n    primary: function primary(placement) {\n      var value = popper[placement];\n      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return defineProperty({}, placement, value);\n    },\n    secondary: function secondary(placement) {\n      var mainSide = placement === 'right' ? 'left' : 'top';\n      var value = popper[mainSide];\n      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n      }\n      return defineProperty({}, mainSide, value);\n    }\n  };\n\n  order.forEach(function (placement) {\n    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = _extends({}, popper, check[side](placement));\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction shift(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    var _data$offsets = data.offsets,\n        reference = _data$offsets.reference,\n        popper = _data$offsets.popper;\n\n    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    var side = isVertical ? 'left' : 'top';\n    var measurement = isVertical ? 'width' : 'height';\n\n    var shiftOffsets = {\n      start: defineProperty({}, side, reference[side]),\n      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\n    };\n\n    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  var refRect = data.offsets.reference;\n  var bound = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'preventOverflow';\n  }).boundaries;\n\n  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction inner(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nvar modifiers = {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unitless, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the height.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > More on this [reading this issue](https://github.com/FezVrasta/popper.js/issues/373)\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * An scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper this makes sure the popper has always a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier, can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent'\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near eachothers\n   * without leaving any gap between the two. Expecially useful when the arrow is\n   * enabled and you want to assure it to point to its reference element.\n   * It cares only about the first axis, you can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjuction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]'\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations).\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position,\n     * the popper will never be placed outside of the defined boundaries\n     * (except if keepTogether is enabled)\n     */\n    boundariesElement: 'viewport'\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3d transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties.\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right'\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define you own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3d transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties.\n     */\n    gpuAcceleration: undefined\n  }\n};\n\n/**\n * The `dataObject` is an object containing all the informations used by Popper.js\n * this object get passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper.\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper, it expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow, it expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements.\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overriden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass as 3rd argument an object with the same\n * structure of this object, example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nvar Defaults = {\n  /**\n   * Popper's placement\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: function onCreate() {},\n\n  /**\n   * Callback called when the popper is updated, this callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: function onUpdate() {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js\n   * @prop {modifiers}\n   */\n  modifiers: modifiers\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n\n// Utils\n// Methods\nvar Popper = function () {\n  /**\n   * Create a new Popper.js instance\n   * @class Popper\n   * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper\n   * @param {HTMLElement} popper - The HTML element used as popper.\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  function Popper(reference, popper) {\n    var _this = this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, Popper);\n\n    this.scheduleUpdate = function () {\n      return requestAnimationFrame(_this.update);\n    };\n\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = _extends({}, Popper.Defaults, options);\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: []\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n      return _extends({\n        name: name\n      }, _this.options.modifiers[name]);\n    })\n    // sort the modifiers by order\n    .sort(function (a, b) {\n      return a.order - b.order;\n    });\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(function (modifierOptions) {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    var eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n\n\n  createClass(Popper, [{\n    key: 'update',\n    value: function update$$1() {\n      return update.call(this);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy$$1() {\n      return destroy.call(this);\n    }\n  }, {\n    key: 'enableEventListeners',\n    value: function enableEventListeners$$1() {\n      return enableEventListeners.call(this);\n    }\n  }, {\n    key: 'disableEventListeners',\n    value: function disableEventListeners$$1() {\n      return disableEventListeners.call(this);\n    }\n\n    /**\n     * Schedule an update, it will run on the next UI update available\n     * @method scheduleUpdate\n     * @memberof Popper\n     */\n\n\n    /**\n     * Collection of utilities useful when writing custom modifiers.\n     * Starting from version 1.7, this method is available only if you\n     * include `popper-utils.js` before `popper.js`.\n     *\n     * **DEPRECATION**: This way to access PopperUtils is deprecated\n     * and will be removed in v2! Use the PopperUtils module directly instead.\n     * Due to the high instability of the methods contained in Utils, we can't\n     * guarantee them to follow semver. Use them at your own risk!\n     * @static\n     * @private\n     * @type {Object}\n     * @deprecated since version 1.8\n     * @member Utils\n     * @memberof Popper\n     */\n\n  }]);\n  return Popper;\n}();\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n\n\nPopper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\nPopper.placements = placements;\nPopper.Defaults = Defaults;\n\nexport default Popper;\n"]},"metadata":{},"sourceType":"module"}